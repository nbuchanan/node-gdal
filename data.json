{
    "project": {
        "name": "node-gdal-mbt",
        "description": "Node.js bindings for GDAL (Geospatial Data Abstraction Library)",
        "version": "0.9.4",
        "url": "https://github.com/nbuchanan/node-gdal",
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/GDALLogoColor.svg/200px-GDALLogoColor.svg.png"
    },
    "files": {
        "lib/envelope.js": {
            "name": "lib/envelope.js",
            "modules": {},
            "classes": {
                "gdal.Envelope": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/envelope_3d.js": {
            "name": "lib/envelope_3d.js",
            "modules": {},
            "classes": {
                "gdal.Envelope3D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/gdal.js": {
            "name": "lib/gdal.js",
            "modules": {},
            "classes": {},
            "fors": {
                "gdal": 1,
                "gdal.DatasetBands": 1,
                "gdal.LayerFeatures": 1,
                "gdal.FeatureFields": 1,
                "gdal.Geometry": 1,
                "gdal.LayerFields": 1,
                "gdal.DatasetLayers": 1,
                "gdal.FeatureDefnFields": 1,
                "gdal.PolygonRings": 1,
                "gdal.LineStringPoints": 1,
                "gdal.GeometryCollectionChildren": 1,
                "gdal.RasterBandOverviews": 1,
                "gdal.GDALDrivers": 1
            },
            "namespaces": {}
        },
        "src/collections/dataset_bands.cpp": {
            "name": "src/collections/dataset_bands.cpp",
            "modules": {},
            "classes": {
                "gdal.DatasetBands": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/dataset_layers.cpp": {
            "name": "src/collections/dataset_layers.cpp",
            "modules": {},
            "classes": {
                "gdal.DatasetLayers": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/feature_defn_fields.cpp": {
            "name": "src/collections/feature_defn_fields.cpp",
            "modules": {},
            "classes": {
                "gdal.FeatureDefnFields": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/feature_fields.cpp": {
            "name": "src/collections/feature_fields.cpp",
            "modules": {},
            "classes": {
                "gdal.FeatureFields": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/gdal_drivers.cpp": {
            "name": "src/collections/gdal_drivers.cpp",
            "modules": {},
            "classes": {
                "gdal.GDALDrivers": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/geometry_collection_children.cpp": {
            "name": "src/collections/geometry_collection_children.cpp",
            "modules": {},
            "classes": {
                "gdal.GeometryCollectionChildren": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/layer_features.cpp": {
            "name": "src/collections/layer_features.cpp",
            "modules": {},
            "classes": {
                "gdal.LayerFeatures": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/layer_fields.cpp": {
            "name": "src/collections/layer_fields.cpp",
            "modules": {},
            "classes": {
                "gdal.LayerFields": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/linestring_points.cpp": {
            "name": "src/collections/linestring_points.cpp",
            "modules": {},
            "classes": {
                "gdal.LineStringPoints": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/polygon_rings.cpp": {
            "name": "src/collections/polygon_rings.cpp",
            "modules": {},
            "classes": {
                "gdal.PolygonRings": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/rasterband_overviews.cpp": {
            "name": "src/collections/rasterband_overviews.cpp",
            "modules": {},
            "classes": {
                "gdal.RasterBandOverviews": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/collections/rasterband_pixels.cpp": {
            "name": "src/collections/rasterband_pixels.cpp",
            "modules": {},
            "classes": {
                "gdal.RasterBandPixels": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/utils/translate_options.hpp": {
            "name": "src/utils/translate_options.hpp",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gdal.hpp": {
            "name": "src/gdal.hpp",
            "modules": {},
            "classes": {},
            "fors": {
                "gdal": 1
            },
            "namespaces": {}
        },
        "src/gdal_algorithms.cpp": {
            "name": "src/gdal_algorithms.cpp",
            "modules": {},
            "classes": {},
            "fors": {
                "gdal": 1
            },
            "namespaces": {}
        },
        "src/gdal_coordinate_transformation.cpp": {
            "name": "src/gdal_coordinate_transformation.cpp",
            "modules": {},
            "classes": {
                "gdal.CoordinateTransformation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_dataset.cpp": {
            "name": "src/gdal_dataset.cpp",
            "modules": {},
            "classes": {
                "gdal.Dataset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_driver.cpp": {
            "name": "src/gdal_driver.cpp",
            "modules": {},
            "classes": {
                "gdal.Driver": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_feature.cpp": {
            "name": "src/gdal_feature.cpp",
            "modules": {},
            "classes": {
                "gdal.Feature": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_feature_defn.cpp": {
            "name": "src/gdal_feature_defn.cpp",
            "modules": {},
            "classes": {
                "gdal.FeatureDefn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_field_defn.cpp": {
            "name": "src/gdal_field_defn.cpp",
            "modules": {},
            "classes": {
                "gdal.FieldDefn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_geometry.cpp": {
            "name": "src/gdal_geometry.cpp",
            "modules": {},
            "classes": {
                "gdal.Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_geometrycollection.cpp": {
            "name": "src/gdal_geometrycollection.cpp",
            "modules": {},
            "classes": {
                "gdal.GeometryCollection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_layer.cpp": {
            "name": "src/gdal_layer.cpp",
            "modules": {},
            "classes": {
                "gdal.Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_linearring.cpp": {
            "name": "src/gdal_linearring.cpp",
            "modules": {},
            "classes": {
                "gdal.LinearRing": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_linestring.cpp": {
            "name": "src/gdal_linestring.cpp",
            "modules": {},
            "classes": {
                "gdal.LineString": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_multilinestring.cpp": {
            "name": "src/gdal_multilinestring.cpp",
            "modules": {},
            "classes": {
                "gdal.MultiLineString": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_multipoint.cpp": {
            "name": "src/gdal_multipoint.cpp",
            "modules": {},
            "classes": {
                "gdal.MultiPoint": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_multipolygon.cpp": {
            "name": "src/gdal_multipolygon.cpp",
            "modules": {},
            "classes": {
                "gdal.MultiPolygon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_point.cpp": {
            "name": "src/gdal_point.cpp",
            "modules": {},
            "classes": {
                "gdal.Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_polygon.cpp": {
            "name": "src/gdal_polygon.cpp",
            "modules": {},
            "classes": {
                "gdal.Polygon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_rasterband.cpp": {
            "name": "src/gdal_rasterband.cpp",
            "modules": {},
            "classes": {
                "gdal.RasterBand": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_spatial_reference.cpp": {
            "name": "src/gdal_spatial_reference.cpp",
            "modules": {},
            "classes": {
                "gdal.SpatialReference": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gdal_warper.cpp": {
            "name": "src/gdal_warper.cpp",
            "modules": {},
            "classes": {},
            "fors": {
                "gdal": 1
            },
            "namespaces": {}
        },
        "src/node_gdal.cpp": {
            "name": "src/node_gdal.cpp",
            "modules": {},
            "classes": {
                "gdal": 1,
                "Constants (DMD)": 1,
                "Constants (CPL Error Levels)": 1,
                "Constants (CPL Error Codes)": 1,
                "Constants (DCAP)": 1,
                "Constants (OLC)": 1,
                "Constants (ODsC)": 1,
                "Constants (GDT)": 1,
                "Constants (OJ)": 1,
                "Constants (GCI)": 1,
                "Constants (wkbVariant)": 1,
                "Constants (wkbByteOrder)": 1,
                "Constants (wkbGeometryType)": 1,
                "Constants (OFT)": 1,
                "Constants (GRA)": 1
            },
            "fors": {
                "gdal": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "gdal.Envelope": {
            "name": "gdal.Envelope",
            "shortname": "gdal.Envelope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/envelope.js",
            "line": 2,
            "description": "A 2D bounding box. For 3D envelopes, see {{#crossLink \"gdal.Envelope3D\"}}gdal.Envelope3D{{/crossLink}}.\n\n(Pure-javascript implementation of [OGREnvelope](http://www.gdal.org/classOGREnvelope.html))",
            "is_constructor": 1,
            "params": [
                {
                    "name": "bounds",
                    "description": "An object containing `minX`, `maxX`, `minY`, and `maxY` values.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "gdal.Envelope3D": {
            "name": "gdal.Envelope3D",
            "shortname": "gdal.Envelope3D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/envelope_3d.js",
            "line": 2,
            "description": "A 3D bounding box. For 2D envelopes, see {{#crossLink \"gdal.Envelope\"}}gdal.Envelope{{/crossLink}}.\n\n(Pure-javascript implementation of [OGREnvelope3D](http://www.gdal.org/classOGREnvelope3D.html))",
            "is_constructor": 1,
            "params": [
                {
                    "name": "bounds",
                    "description": "An object containing `minX`, `maxX`, `minY`, `maxY`, `minZ`, and `maxZ` values.",
                    "type": "Object"
                }
            ]
        },
        "gdal": {
            "name": "gdal",
            "shortname": "gdal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 1,
            "description": "This [node-gdal](https://github.com/naturalatlas/node-gdal) binding for\nNode.js provides a feature-complete way of reading, writing, and manipulating\ngeospatial data (raster and vector) using [GDAL](http://www.gdal.org/).\n```\n// sample: open a shapefile and display all features as geojson\nvar dataset = gdal.open(\"states.shp\");\n\ndataset.layers.get(0).features.forEach(function(feature) {\n    console.log(feature.getGeometry().toJSON());\n});\n```\n\n<iframe src=\"http://ghbtns.com/github-btn.html?user=naturalatlas&repo=node-gdal&type=watch&count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"90\" height=\"20\" style=\"margin-top:20px\"></iframe>\n<iframe src=\"http://ghbtns.com/github-btn.html?user=naturalatlas&repo=node-gdal&type=fork&count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"200\" height=\"20\"></iframe>"
        },
        "gdal.DatasetBands": {
            "name": "gdal.DatasetBands",
            "shortname": "gdal.DatasetBands",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/dataset_bands.cpp",
            "line": 38,
            "description": "An encapsulation of a {{#crossLink \"gdal.Dataset\"}}Dataset{{/crossLink}}'s raster bands.\n\n```\nvar bands = dataset.bands;```"
        },
        "gdal.LayerFeatures": {
            "name": "gdal.LayerFeatures",
            "shortname": "gdal.LayerFeatures",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/layer_features.cpp",
            "line": 41,
            "description": "An encapsulation of a {{#crossLink \"gdal.Layer\"}}Layer{{/crossLink}}'s features."
        },
        "gdal.FeatureFields": {
            "name": "gdal.FeatureFields",
            "shortname": "gdal.FeatureFields",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/feature_fields.cpp",
            "line": 42,
            "description": "An encapsulation of all field data that makes up a {{#crossLink \"gdal.Feature\"}}Feature{{/crossLink}}."
        },
        "gdal.Geometry": {
            "name": "gdal.Geometry",
            "shortname": "gdal.Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_geometry.cpp",
            "line": 121,
            "description": "Abstract base class for all geometry classes."
        },
        "gdal.LayerFields": {
            "name": "gdal.LayerFields",
            "shortname": "gdal.LayerFields",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/layer_fields.cpp",
            "line": 42
        },
        "gdal.DatasetLayers": {
            "name": "gdal.DatasetLayers",
            "shortname": "gdal.DatasetLayers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/dataset_layers.cpp",
            "line": 41,
            "description": "An encapsulation of a {{#crossLink \"gdal.Dataset\"}}Dataset{{/crossLink}}'s vector layers.\n\n```\nvar layers = dataset.layers;```"
        },
        "gdal.FeatureDefnFields": {
            "name": "gdal.FeatureDefnFields",
            "shortname": "gdal.FeatureDefnFields",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 42,
            "description": "An encapsulation of a {{#crossLink \"gdal.FeatureDefn\"}}FeatureDefn{{/crossLink}}'s fields."
        },
        "gdal.PolygonRings": {
            "name": "gdal.PolygonRings",
            "shortname": "gdal.PolygonRings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/polygon_rings.cpp",
            "line": 36,
            "description": "A collection of polygon rings, used by {{#crossLink \"gdal.Polygon\"}}gdal.Polygon{{/crossLink}}."
        },
        "gdal.LineStringPoints": {
            "name": "gdal.LineStringPoints",
            "shortname": "gdal.LineStringPoints",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/linestring_points.cpp",
            "line": 39,
            "description": "An encapsulation of a {{#crossLink \"gdal.LineString\"}}LineString{{/crossLink}}'s points."
        },
        "gdal.GeometryCollectionChildren": {
            "name": "gdal.GeometryCollectionChildren",
            "shortname": "gdal.GeometryCollectionChildren",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/geometry_collection_children.cpp",
            "line": 36,
            "description": "A collection of Geometries, used by {{#crossLink \"gdal.GeometryCollection\"}}gdal.GeometryCollection{{/crossLink}}."
        },
        "gdal.RasterBandOverviews": {
            "name": "gdal.RasterBandOverviews",
            "shortname": "gdal.RasterBandOverviews",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/rasterband_overviews.cpp",
            "line": 34,
            "description": "An encapsulation of a {{#crossLink \"gdal.RasterBand\"}}RasterBand{{/crossLink}}\noverview functionality."
        },
        "gdal.GDALDrivers": {
            "name": "gdal.GDALDrivers",
            "shortname": "gdal.GDALDrivers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/gdal_drivers.cpp",
            "line": 39,
            "description": "An collection of all {{#crossLink \"gdal.Driver\"}}drivers{{/crossLink}} registered with GDAL."
        },
        "gdal.RasterBandPixels": {
            "name": "gdal.RasterBandPixels",
            "shortname": "gdal.RasterBandPixels",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/collections/rasterband_pixels.cpp",
            "line": 40,
            "description": "A representation of a {{#crossLink \"gdal.RasterBand\"}}RasterBand{{/crossLink}}'s pixels.\n\n\nNote: Typed arrays should be created with an external ArrayBuffer for versions of node >= 0.11\n```\nvar n = 16*16;\nvar data = new Float32Array(new ArrayBuffer(n*4));\n//read data into the existing array\nband.pixels.read(0,0,16,16,data);```"
        },
        "gdal.CoordinateTransformation": {
            "name": "gdal.CoordinateTransformation",
            "shortname": "gdal.CoordinateTransformation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_coordinate_transformation.cpp",
            "line": 50,
            "description": "Object for transforming between coordinate systems.",
            "throws": {
                "description": "Error"
            },
            "is_constructor": 1,
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "gdal.SpatialReference"
                },
                {
                    "name": "target",
                    "description": "If a raster Dataset, the conversion will represent a conversion to pixel coordinates.",
                    "type": "gdal.SpatialReference|gdal.Dataset"
                }
            ]
        },
        "gdal.Dataset": {
            "name": "gdal.Dataset",
            "shortname": "gdal.Dataset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_dataset.cpp",
            "line": 118,
            "description": "A set of associated raster bands and/or vector layers, usually from one file.\n\n```\n// raster dataset:\ndataset = gdal.open('file.tif');\nbands = dataset.bands;\n\n// vector dataset:\ndataset = gdal.open('file.shp');\nlayers = dataset.layers;```"
        },
        "gdal.Driver": {
            "name": "gdal.Driver",
            "shortname": "gdal.Driver",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_driver.cpp",
            "line": 96,
            "description": "Format specific driver.\n\nAn instance of this class is created for each supported format, and\nmanages information about the format.\n\nThis roughly corresponds to a file format, though some drivers may\nbe gateways to many formats through a secondary multi-library."
        },
        "gdal.Feature": {
            "name": "gdal.Feature",
            "shortname": "gdal.Feature",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_feature.cpp",
            "line": 76,
            "description": "A simple feature, including geometry and attributes. Its fields and geometry type is defined by the given definition.\n\n```\n//create layer and specify geometry type\nvar layer = dataset.layers.create('mylayer', null, gdal.Point);\n\n//setup fields for the given layer\nlayer.fields.add(new gdal.FieldDefn('elevation', gdal.OFTInteger));\nlayer.fields.add(new gdal.FieldDefn('name', gdal.OFTString));\n\n//create feature using layer definition and then add it to the layer\nvar feature = new gdal.Feature(layer);\nfeature.fields.set('elevation', 13775);\nfeature.fields.set('name', 'Grand Teton');\nfeature.setGeometry(new gdal.Point(43.741208, -110.802414));\nlayer.features.add(feature);```",
            "is_constructor": 1,
            "params": [
                {
                    "name": "definition",
                    "description": "",
                    "type": "gdal.Layer|gdal.FeatureDefn"
                }
            ]
        },
        "gdal.FeatureDefn": {
            "name": "gdal.FeatureDefn",
            "shortname": "gdal.FeatureDefn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_feature_defn.cpp",
            "line": 58,
            "description": "Definition of a feature class or feature layer.",
            "is_constructor": 1
        },
        "gdal.FieldDefn": {
            "name": "gdal.FieldDefn",
            "shortname": "gdal.FieldDefn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_field_defn.cpp",
            "line": 56,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "Field name",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "Data type (see {{#crossLink \"Constants (OFT)\"}}OFT constants{{/crossLink}})",
                    "type": "String"
                }
            ]
        },
        "gdal.GeometryCollection": {
            "name": "gdal.GeometryCollection",
            "shortname": "gdal.GeometryCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_geometrycollection.cpp",
            "line": 64,
            "description": "A collection of 1 or more geometry objects.",
            "is_constructor": 1,
            "extends": "gdal.Geometry"
        },
        "gdal.Layer": {
            "name": "gdal.Layer",
            "shortname": "gdal.Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_layer.cpp",
            "line": 87,
            "description": "A representation of a layer of simple vector features, with access methods."
        },
        "gdal.LinearRing": {
            "name": "gdal.LinearRing",
            "shortname": "gdal.LinearRing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_linearring.cpp",
            "line": 62,
            "description": "Concrete representation of a closed ring.",
            "is_constructor": 1,
            "extends": "gdal.LineString"
        },
        "gdal.LineString": {
            "name": "gdal.LineString",
            "shortname": "gdal.LineString",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_linestring.cpp",
            "line": 65,
            "description": "Concrete representation of a multi-vertex line.",
            "example": [
                "\n```\nvar lineString = new gdal.LineString();\nlineString.points.add(new gdal.Point(0,0));\nlineString.points.add(new gdal.Point(0,10));```"
            ],
            "is_constructor": 1,
            "extends": "gdal.Geometry"
        },
        "gdal.MultiLineString": {
            "name": "gdal.MultiLineString",
            "shortname": "gdal.MultiLineString",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_multilinestring.cpp",
            "line": 62,
            "is_constructor": 1,
            "extends": "gdal.GeometryCollection"
        },
        "gdal.MultiPoint": {
            "name": "gdal.MultiPoint",
            "shortname": "gdal.MultiPoint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_multipoint.cpp",
            "line": 62,
            "is_constructor": 1,
            "extends": "gdal.GeometryCollection"
        },
        "gdal.MultiPolygon": {
            "name": "gdal.MultiPolygon",
            "shortname": "gdal.MultiPolygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_multipolygon.cpp",
            "line": 62,
            "is_constructor": 1,
            "extends": "gdal.GeometryCollection"
        },
        "gdal.Point": {
            "name": "gdal.Point",
            "shortname": "gdal.Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_point.cpp",
            "line": 63,
            "description": "Point class.",
            "is_constructor": 1,
            "extends": "gdal.Geometry",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        "gdal.Polygon": {
            "name": "gdal.Polygon",
            "shortname": "gdal.Polygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_polygon.cpp",
            "line": 63,
            "description": "Concrete class representing polygons.",
            "is_constructor": 1,
            "extends": "gdal.Geometry"
        },
        "gdal.RasterBand": {
            "name": "gdal.RasterBand",
            "shortname": "gdal.RasterBand",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_rasterband.cpp",
            "line": 100,
            "description": "A single raster band (or channel)."
        },
        "gdal.SpatialReference": {
            "name": "gdal.SpatialReference",
            "shortname": "gdal.SpatialReference",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/gdal_spatial_reference.cpp",
            "line": 101,
            "description": "This class respresents a OpenGIS Spatial Reference System, and contains methods\nfor converting between this object organization and well known text (WKT)\nformat.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "wkt",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "Constants (DMD)": {
            "name": "Constants (DMD)",
            "shortname": "Constants (DMD)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 277
        },
        "Constants (CPL Error Levels)": {
            "name": "Constants (CPL Error Levels)",
            "shortname": "Constants (CPL Error Levels)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 318
        },
        "Constants (CPL Error Codes)": {
            "name": "Constants (CPL Error Codes)",
            "shortname": "Constants (CPL Error Codes)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 363
        },
        "Constants (DCAP)": {
            "name": "Constants (DCAP)",
            "shortname": "Constants (DCAP)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 434
        },
        "Constants (OLC)": {
            "name": "Constants (OLC)",
            "shortname": "Constants (OLC)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 457
        },
        "Constants (ODsC)": {
            "name": "Constants (ODsC)",
            "shortname": "Constants (ODsC)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 562
        },
        "Constants (GDT)": {
            "name": "Constants (GDT)",
            "shortname": "Constants (GDT)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 603,
            "description": "Pixel data types."
        },
        "Constants (OJ)": {
            "name": "Constants (OJ)",
            "shortname": "Constants (OJ)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 694
        },
        "Constants (GCI)": {
            "name": "Constants (GCI)",
            "shortname": "Constants (GCI)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 717
        },
        "Constants (wkbVariant)": {
            "name": "Constants (wkbVariant)",
            "shortname": "Constants (wkbVariant)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 824
        },
        "Constants (wkbByteOrder)": {
            "name": "Constants (wkbByteOrder)",
            "shortname": "Constants (wkbByteOrder)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 857
        },
        "Constants (wkbGeometryType)": {
            "name": "Constants (wkbGeometryType)",
            "shortname": "Constants (wkbGeometryType)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 874
        },
        "Constants (OFT)": {
            "name": "Constants (OFT)",
            "shortname": "Constants (OFT)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 1007
        },
        "Constants (GRA)": {
            "name": "Constants (GRA)",
            "shortname": "Constants (GRA)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/node_gdal.cpp",
            "line": 1084,
            "description": "Resampling options that can be used with the gdal.reprojectImage() method."
        }
    },
    "classitems": [
        {
            "file": "lib/envelope.js",
            "line": 25,
            "description": "Determines if the envelope has not been set yet.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Envelope"
        },
        {
            "file": "lib/envelope.js",
            "line": 35,
            "description": "Unions the provided envelope with the current envelope.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "gdal.Envelope"
        },
        {
            "file": "lib/envelope.js",
            "line": 70,
            "description": "Determines if the provided envelope touches it.",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Envelope"
        },
        {
            "file": "lib/envelope.js",
            "line": 82,
            "description": "Updates the envelope to the intersection of the two envelopes.",
            "itemtype": "method",
            "name": "intersect",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "gdal.Envelope"
        },
        {
            "file": "lib/envelope.js",
            "line": 107,
            "description": "Determines if the provided envelope is wholly-contained by the current envelope.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Envelope"
        },
        {
            "file": "lib/envelope.js",
            "line": 119,
            "description": "Converts the envelope to a polygon.",
            "itemtype": "method",
            "name": "toPolygon",
            "return": {
                "description": "",
                "type": "gdal.Polygon"
            },
            "class": "gdal.Envelope"
        },
        {
            "file": "lib/envelope_3d.js",
            "line": 29,
            "description": "Determines if the envelope has not been set yet.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Envelope3D"
        },
        {
            "file": "lib/envelope_3d.js",
            "line": 39,
            "description": "Unions the provided envelope with the current envelope.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope3D"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "gdal.Envelope3D"
        },
        {
            "file": "lib/envelope_3d.js",
            "line": 82,
            "description": "Determines if the provided envelope touches it.",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope3D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Envelope3D"
        },
        {
            "file": "lib/envelope_3d.js",
            "line": 95,
            "description": "Updates the envelope to the intersection of the two envelopes.",
            "itemtype": "method",
            "name": "intersect",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope3D"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "gdal.Envelope3D"
        },
        {
            "file": "lib/envelope_3d.js",
            "line": 124,
            "description": "Determines if the provided envelope is wholly-contained by the current envelope.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "envelope",
                    "description": "",
                    "type": "gdal.Envelope3D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Envelope3D"
        },
        {
            "file": "lib/gdal.js",
            "line": 23,
            "description": "Gets a GDAL configuration setting.",
            "example": [
                "\n```\ndata_path = gdal.config.get('GDAL_DATA');```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "config.get",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal"
        },
        {
            "file": "lib/gdal.js",
            "line": 38,
            "description": "Sets a GDAL configuration setting.",
            "example": [
                "\n```\ngdal.config.set('GDAL_DATA', data_path);```"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "config.set",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "gdal"
        },
        {
            "file": "lib/gdal.js",
            "line": 107,
            "description": "Iterates through all bands using a callback function.\nNote: GDAL band indexes start at 1, not 0.",
            "example": [
                "\n```\ndataset.bands.forEach(function(band, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.RasterBand\"}}RasterBand{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.DatasetBands"
        },
        {
            "file": "lib/gdal.js",
            "line": 126,
            "description": "Iterates through all bands using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = dataset.bands.map(function(band, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.RasterBand\"}}RasterBand{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.DatasetBands"
        },
        {
            "file": "lib/gdal.js",
            "line": 142,
            "description": "Iterates through all features using a callback function.",
            "example": [
                "\n```\nlayer.features.forEach(function(feature, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Feature\"}}Feature{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "lib/gdal.js",
            "line": 162,
            "description": "Iterates through all features using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = layer.features.map(function(band, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Feature\"}}Feature{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "lib/gdal.js",
            "line": 178,
            "description": "Iterates through all fields using a callback function.",
            "example": [
                "\n```\nlayer.features.get(0).fields.forEach(function(value, key) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each feature `value` and `key`.",
                    "type": "Function"
                }
            ],
            "class": "gdal.FeatureFields"
        },
        {
            "file": "lib/gdal.js",
            "line": 200,
            "description": "Iterates through all fields using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = layer.features.get(0).fields.map(function(value, key) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each feature `value` and `key`.",
                    "type": "Function"
                }
            ],
            "class": "gdal.FeatureFields"
        },
        {
            "file": "lib/gdal.js",
            "line": 216,
            "description": "Outputs the fields as a serialized JSON string.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "Serialized JSON",
                "type": "String"
            },
            "class": "gdal.FeatureFields"
        },
        {
            "file": "lib/gdal.js",
            "line": 227,
            "description": "Converts the geometry to a GeoJSON object representation.",
            "itemtype": "method",
            "name": "toObject",
            "return": {
                "description": "GeoJSON",
                "type": "Object"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "lib/gdal.js",
            "line": 238,
            "description": "Iterates through all field definitions using a callback function.",
            "example": [
                "\n```\nlayer.fields.forEach(function(field, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.FieldDefn\"}}FieldDefn{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.LayerFields"
        },
        {
            "file": "lib/gdal.js",
            "line": 251,
            "description": "Iterates through all field definitions using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = layer.fields.map(function(field, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.FieldDefn\"}}FieldDefn{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.LayerFields"
        },
        {
            "file": "lib/gdal.js",
            "line": 267,
            "description": "Iterates through all layers using a callback function.",
            "example": [
                "\n```\ndataset.layers.forEach(function(layer, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Layer\"}}Layer{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "lib/gdal.js",
            "line": 280,
            "description": "Iterates through all layers using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = dataset.layers.map(function(field, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Layer\"}}Layer{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "lib/gdal.js",
            "line": 296,
            "description": "Iterates through all field definitions using a callback function.",
            "example": [
                "\n```\nfeatureDefn.forEach(function(field, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.FieldDefn\"}}FieldDefn{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "lib/gdal.js",
            "line": 309,
            "description": "Iterates through all field definitions using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = dataset.layers.map(function(field, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.FieldDefn\"}}FieldDefn{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "lib/gdal.js",
            "line": 325,
            "description": "Iterates through all rings using a callback function.",
            "example": [
                "\n```\npolygon.rings.forEach(function(ring, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.LineString\"}}LineString{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.PolygonRings"
        },
        {
            "file": "lib/gdal.js",
            "line": 338,
            "description": "Iterates through all rings using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = polygon.rings.map(function(ring, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.LineString\"}}LineString{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "lib/gdal.js",
            "line": 354,
            "description": "Iterates through all points using a callback function.",
            "example": [
                "\n```\nlineString.points.forEach(function(point, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Point\"}}Point{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "lib/gdal.js",
            "line": 367,
            "description": "Iterates through all points using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = lineString.points.map(function(point, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Point\"}}Point{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "lib/gdal.js",
            "line": 383,
            "description": "Iterates through all child geometries using a callback function.",
            "example": [
                "\n```\ngeometryCollection.children.forEach(function(geometry, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Geometry\"}}Geometry{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.GeometryCollectionChildren"
        },
        {
            "file": "lib/gdal.js",
            "line": 396,
            "description": "Iterates through all child geometries using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = geometryCollection.children.map(function(geometry, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Geometry\"}}Geometry{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.GeometryCollectionChildren"
        },
        {
            "file": "lib/gdal.js",
            "line": 412,
            "description": "Iterates through all overviews using a callback function.",
            "example": [
                "\n```\nband.overviews.forEach(function(overviewBand, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "gdal.RasterBandOverviews"
        },
        {
            "file": "lib/gdal.js",
            "line": 425,
            "description": "Iterates through all raster overviews using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = band.overviews.map(function(overviewBand, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Geometry\"}}Geometry{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.RasterBandOverviews"
        },
        {
            "file": "lib/gdal.js",
            "line": 441,
            "description": "Iterates through all registered drivers using a callback function.",
            "example": [
                "\n```\ngdal.drivers.forEach(function(driver, i) { ... });```"
            ],
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Driver\"}}Driver{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.GDALDrivers"
        },
        {
            "file": "lib/gdal.js",
            "line": 454,
            "description": "Iterates through all drivers using a callback function and builds\nan array of the returned values.",
            "example": [
                "\n```\nvar result = gdal.drivers.map(function(driver, i) {\n    return value;\n});```"
            ],
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called with each {{#crossLink \"gdal.Driver\"}}Driver{{/crossLink}}",
                    "type": "Function"
                }
            ],
            "class": "gdal.GDALDrivers"
        },
        {
            "file": "lib/gdal.js",
            "line": 470,
            "description": "Outputs all geometries as a regular javascript array.",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "List of {{#crossLink \"gdal.Geometry\"}}Geometry{{/crossLink}} instances.",
                "type": "Array"
            },
            "class": "gdal.GeometryCollectionChildren"
        },
        {
            "file": "lib/gdal.js",
            "line": 479,
            "description": "Outputs all points as a regular javascript array.",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "List of {{#crossLink \"gdal.Point\"}}Point{{/crossLink}} instances.",
                "type": "Array"
            },
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "lib/gdal.js",
            "line": 488,
            "description": "Outputs all rings as a regular javascript array.",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "List of {{#crossLink \"gdal.LineString\"}}LineString{{/crossLink}} instances.",
                "type": "Array"
            },
            "class": "gdal.PolygonRings"
        },
        {
            "file": "lib/gdal.js",
            "line": 497,
            "description": "Creates or opens a dataset. Dataset should be explicitly closed with `dataset.close()` method if opened in `\"w\"` mode to flush any changes. Otherwise, datasets are closed when (and if) node decides to garbage collect them.",
            "example": [
                "\n```\nvar dataset = gdal.open('./data.shp');```"
            ],
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "open",
            "static": 1,
            "params": [
                {
                    "name": "path",
                    "description": "Path to dataset to open",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "description": "The mode to use to open the file: `\"r\"`, `\"r+\"`, or `\"w\"`",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"r\""
                },
                {
                    "name": "drivers",
                    "description": "Driver name, or list of driver names to attempt to use.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "x_size",
                    "description": "Used when creating a raster dataset with the `\"w\"` mode.",
                    "type": "Integer",
                    "optional": true
                },
                {
                    "name": "y_size",
                    "description": "Used when creating a raster dataset with the `\"w\"` mode.",
                    "type": "Integer",
                    "optional": true
                },
                {
                    "name": "band_count",
                    "description": "Used when creating a raster dataset with the `\"w\"` mode.",
                    "type": "Integer",
                    "optional": true
                },
                {
                    "name": "data_type",
                    "description": "Used when creating a raster dataset with the `\"w\"` mode.",
                    "type": "Integer",
                    "optional": true
                },
                {
                    "name": "creation_options",
                    "description": "Used when creating a dataset with the `\"w\"` mode.",
                    "type": "String[]|object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Dataset"
            },
            "class": "gdal"
        },
        {
            "file": "lib/gdal.js",
            "line": 601,
            "description": "Creates a LayerFields instance from an object of keys and values.",
            "itemtype": "method",
            "name": "fromJSON",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "approx_ok",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/dataset_bands.cpp",
            "line": 86,
            "description": "Returns the band with the given ID.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.RasterBand"
            },
            "class": "gdal.DatasetBands"
        },
        {
            "file": "src/collections/dataset_bands.cpp",
            "line": 124,
            "description": "Adds a new band.",
            "itemtype": "method",
            "name": "create",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "dataType",
                    "description": "Type of band ({{#crossLink \"Constants (GDT)\"}}see GDT constants{{/crossLink}}).",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.RasterBand"
            },
            "class": "gdal.DatasetBands"
        },
        {
            "file": "src/collections/dataset_bands.cpp",
            "line": 184,
            "description": "Returns the number of bands.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.DatasetBands"
        },
        {
            "file": "src/collections/dataset_bands.cpp",
            "line": 213,
            "description": "Parent dataset",
            "readonly": "",
            "itemtype": "attribute",
            "name": "ds",
            "type": "{gdal.Dataset}",
            "class": "gdal.DatasetBands"
        },
        {
            "file": "src/collections/dataset_layers.cpp",
            "line": 90,
            "description": "Returns the layer with the given name or identifier.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "Layer name or ID.",
                    "type": "String|Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Layer"
            },
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "src/collections/dataset_layers.cpp",
            "line": 139,
            "description": "Adds a new layer.",
            "example": [
                "\n```\ndataset.layers.create('layername', null, gdal.Point);\n```"
            ],
            "itemtype": "method",
            "name": "create",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "name",
                    "description": "Layer name",
                    "type": "String"
                },
                {
                    "name": "srs",
                    "description": "Layer projection",
                    "type": "gdal.SpatialReference|null"
                },
                {
                    "name": "geomType",
                    "description": "Geometry type or constructor ({{#crossLink \"Constants (wkbGeometryType)\"}}see geometry types{{/crossLink}})",
                    "type": "Integer|Function"
                },
                {
                    "name": "creation_options",
                    "description": "driver-specific layer creation options",
                    "type": "String[]|object"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Layer"
            },
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "src/collections/dataset_layers.cpp",
            "line": 206,
            "description": "Returns the number of layers.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "src/collections/dataset_layers.cpp",
            "line": 237,
            "description": "Copies a layer.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "src_lyr_name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "dst_lyr_name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "layer creation options",
                    "type": "Object|string[]",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Layer"
            },
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "src/collections/dataset_layers.cpp",
            "line": 291,
            "description": "Removes a layer.",
            "itemtype": "method",
            "name": "remove",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "src/collections/dataset_layers.cpp",
            "line": 331,
            "description": "Parent dataset",
            "readonly": "",
            "itemtype": "attribute",
            "name": "ds",
            "type": "{gdal.Dataset}",
            "class": "gdal.DatasetLayers"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 87,
            "description": "Returns the number of fields.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 107,
            "description": "Returns the index of field definition.",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Index or `-1` if not found.",
                "type": "Integer"
            },
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 131,
            "description": "Returns a field definition.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "Field name or index",
                    "type": "String|Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.FieldDefn"
            },
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 160,
            "description": "Returns a list of field names.",
            "itemtype": "method",
            "name": "getNames",
            "return": {
                "description": "List of field names.",
                "type": "Array"
            },
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 188,
            "description": "Removes a field definition.",
            "itemtype": "method",
            "name": "remove",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "key",
                    "description": "Field name or index",
                    "type": "String|Integer"
                }
            ],
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 223,
            "description": "Adds field definition(s).",
            "itemtype": "method",
            "name": "add",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "field(s)",
                    "description": "",
                    "type": "gdal.FieldDefn|Array"
                }
            ],
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 271,
            "description": "Reorders the fields.",
            "example": [
                "\n```\n// reverse fields:\nfeatureDef.fields.reorder([2, 1, 0]);```"
            ],
            "itemtype": "method",
            "name": "reorder",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "map",
                    "description": "An array representing the new field order.",
                    "type": "Array"
                }
            ],
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_defn_fields.cpp",
            "line": 336,
            "description": "Parent feature definition.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "featureDefn",
            "type": "{gdal.FeatureDefn}",
            "class": "gdal.FeatureDefnFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 103,
            "description": "Sets feature field(s).",
            "example": [
                "\n```\n// most-efficient, least flexible. requires you to know the ordering of the fields:\nfeature.fields.set(['Something']);\nfeature.fields.set(0, 'Something');\n\n// most flexible.\nfeature.fields.set({name: 'Something'});\nfeature.fields.set('name', 'Something');\n```"
            ],
            "itemtype": "method",
            "name": "set",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "key",
                    "description": "Field name or index",
                    "type": "String|Integer"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 212,
            "description": "Resets all fields.",
            "example": [
                "\n```\nfeature.fields.reset();```"
            ],
            "itemtype": "method",
            "name": "reset",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "values",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 275,
            "description": "Returns the number of fields.",
            "example": [
                "\n```\nfeature.fields.count();```"
            ],
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 299,
            "description": "Returns the index of a field, given its name.",
            "example": [
                "\n```\nvar index = feature.fields.indexOf('field');```"
            ],
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Index or, `-1` if it cannot be found.",
                "type": "Integer"
            },
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 327,
            "description": "Outputs the field data as a pure JS object.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "toObject",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 369,
            "description": "Outputs the field values as a pure JS array.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 439,
            "description": "Returns a field's value.",
            "example": [
                "\n```\nvalue = feature.fields.get(0);\nvalue = feature.fields.get('field');```"
            ],
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "Feature name or index.",
                    "type": "String|Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed|Undefined"
            },
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 480,
            "description": "Returns a list of field name.",
            "itemtype": "method",
            "name": "getNames",
            "throws": {
                "description": "Error"
            },
            "return": {
                "description": "List of field names.",
                "type": "Array"
            },
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/feature_fields.cpp",
            "line": 627,
            "description": "Parent feature",
            "readonly": "",
            "itemtype": "attribute",
            "name": "feature",
            "type": "{gdal.Feature}",
            "class": "gdal.FeatureFields"
        },
        {
            "file": "src/collections/gdal_drivers.cpp",
            "line": 83,
            "description": "Returns a driver with the specified name.\n\nNote: Prior to GDAL2.x there is a separate driver for vector VRTs and raster VRTs.\n      Use `\"VRT:vector\"` to fetch the vector VRT driver and `\"VRT:raster\"` to fetch the raster VRT driver.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "0-based index or driver name",
                    "type": "Integer|string"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Driver"
            },
            "class": "gdal.GDALDrivers"
        },
        {
            "file": "src/collections/gdal_drivers.cpp",
            "line": 172,
            "description": "Returns an array with the names of all the drivers registered with GDAL.",
            "itemtype": "method",
            "name": "getNames",
            "return": {
                "description": "",
                "type": "String[]"
            },
            "class": "gdal.GDALDrivers"
        },
        {
            "file": "src/collections/gdal_drivers.cpp",
            "line": 215,
            "description": "Returns the number of drivers registered with GDAL.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.GDALDrivers"
        },
        {
            "file": "src/collections/geometry_collection_children.cpp",
            "line": 81,
            "description": "Returns the number of items.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "Integer"
            },
            "class": "gdal.GeometryCollectionChildren"
        },
        {
            "file": "src/collections/geometry_collection_children.cpp",
            "line": 97,
            "description": "Returns the geometry at the specified index.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "0-based index",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Geometry"
            },
            "class": "gdal.GeometryCollectionChildren"
        },
        {
            "file": "src/collections/geometry_collection_children.cpp",
            "line": 117,
            "description": "Removes the geometry at the specified index.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "index",
                    "description": "0-based index",
                    "type": "Integer"
                }
            ],
            "class": "gdal.GeometryCollectionChildren"
        },
        {
            "file": "src/collections/geometry_collection_children.cpp",
            "line": 142,
            "description": "Adds geometry(s) to the collection.",
            "example": [
                "\n```\n// one at a time:\ngeometryCollection.children.add(new Point(0,0,0));\n\n// add many at once:\ngeometryCollection.children.add([\n    new Point(1,0,0),\n    new Point(1,0,0)\n]);```"
            ],
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "gdal.GeometryCollectionChildren"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 86,
            "description": "Fetch a feature by its identifier.\n\n**Important:** The `id` argument is not an index. In most cases it will be zero-based,\nbut in some cases it will not. If iterating, it's best to use the `next()` method.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "id",
                    "description": "The feature ID of the feature to read.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Feature"
            },
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 114,
            "description": "Resets the feature pointer used by `next()` and\nreturns the first feature in the layer.",
            "itemtype": "method",
            "name": "first",
            "return": {
                "description": "",
                "type": "gdal.Feature"
            },
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 138,
            "description": "Returns the next feature in the layer. Returns null if no more features.",
            "example": [
                "\n```\nwhile (feature = layer.features.next()) { ... }```"
            ],
            "itemtype": "method",
            "name": "next",
            "return": {
                "description": "",
                "type": "gdal.Feature"
            },
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 164,
            "description": "Adds a feature to the layer. The feature should be created using the current layer as the definition.",
            "example": [
                "\n```\nvar feature = new gdal.Feature(layer);\nfeature.setGeometry(new gdal.Point(0, 1));\nfeature.fields.set('name', 'somestring');\nlayer.features.add(feature);```"
            ],
            "itemtype": "method",
            "name": "add",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "feature",
                    "description": "",
                    "type": "gdal.Feature"
                }
            ],
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 200,
            "description": "Returns the number of features in the layer.",
            "itemtype": "method",
            "name": "count",
            "params": [
                {
                    "name": "force",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "Number of features in the layer.",
                "type": "Integer"
            },
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 224,
            "description": "Sets a feature in the layer.",
            "itemtype": "method",
            "name": "set",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Integer",
                    "optional": true
                },
                {
                    "name": "feature",
                    "description": "",
                    "type": "gdal.Feature"
                }
            ],
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 275,
            "description": "Removes a feature from the layer.",
            "itemtype": "method",
            "name": "remove",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_features.cpp",
            "line": 304,
            "description": "Parent layer",
            "itemtype": "attribute",
            "name": "layer",
            "type": "{gdal.Layer}",
            "class": "gdal.LayerFeatures"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 85,
            "description": "Returns the number of fields.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 111,
            "description": "Find the index of field in the layer.",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Field index, or -1 if the field doesn't exist",
                "type": "Integer"
            },
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 141,
            "description": "Returns a field definition.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "field",
                    "description": "Field name or index (0-based)",
                    "type": "String|integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.FieldDefn"
            },
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 177,
            "description": "Returns a list of field names.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "getNames",
            "return": {
                "description": "List of strings.",
                "type": "Array"
            },
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 212,
            "description": "Removes a field.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "field",
                    "description": "Field name or index (0-based)",
                    "type": "String|integer"
                }
            ],
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 253,
            "description": "Adds field(s).",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "def(s)",
                    "description": "A field definition, or array of field definitions.",
                    "type": "gdal.FieldDefn|Array"
                },
                {
                    "name": "approx",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 313,
            "description": "Reorders fields.",
            "example": [
                "\n```\n// reverse field order\nlayer.fields.reorder([2,1,0]);```"
            ],
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "reorder",
            "params": [
                {
                    "name": "map",
                    "description": "An array of new indexes (integers)",
                    "type": "Array"
                }
            ],
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/layer_fields.cpp",
            "line": 384,
            "description": "Parent layer",
            "readonly": "",
            "itemtype": "attribute",
            "name": "layer",
            "type": "{gdal.Layer}",
            "class": "gdal.LayerFields"
        },
        {
            "file": "src/collections/linestring_points.cpp",
            "line": 84,
            "description": "Returns the number of points that are part of the line string.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "src/collections/linestring_points.cpp",
            "line": 100,
            "description": "Reverses the order of all the points.",
            "itemtype": "method",
            "name": "reverse",
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "src/collections/linestring_points.cpp",
            "line": 117,
            "description": "Adjusts the number of points that make up the line string.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "count",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "src/collections/linestring_points.cpp",
            "line": 137,
            "description": "Returns the point at the specified index.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "0-based index",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Point"
            },
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "src/collections/linestring_points.cpp",
            "line": 165,
            "description": "Sets the point at the specified index.",
            "example": [
                "\n```\nlineString.points.set(0, new gdal.Point(1, 2));```"
            ],
            "itemtype": "method",
            "name": "set",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "index",
                    "description": "0-based index",
                    "type": "Integer"
                },
                {
                    "name": "point",
                    "description": "",
                    "type": "gdal.Point"
                }
            ],
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "src/collections/linestring_points.cpp",
            "line": 249,
            "description": "Adds point(s) to the line string. Also accepts any object with an x and y property.",
            "example": [
                "\n```\nlineString.points.add(new gdal.Point(1, 2));\nlineString.points.add([\n    new gdal.Point(1, 2)\n    new gdal.Point(3, 4)\n]);```"
            ],
            "itemtype": "method",
            "name": "add",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "point(s)",
                    "description": "",
                    "type": "gdal.Point|object|Array"
                }
            ],
            "class": "gdal.LineStringPoints"
        },
        {
            "file": "src/collections/polygon_rings.cpp",
            "line": 81,
            "description": "Returns the number of rings that exist in the collection.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "Integer"
            },
            "class": "gdal.PolygonRings"
        },
        {
            "file": "src/collections/polygon_rings.cpp",
            "line": 100,
            "description": "Returns the ring at the specified index. The ring\nat index `0` will always be the polygon's exterior ring.",
            "example": [
                "\n```\nvar exterior = polygon.rings.get(0);\nvar interior = polygon.rings.get(1);```"
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "gdal.LinearRing"
            },
            "class": "gdal.PolygonRings"
        },
        {
            "file": "src/collections/polygon_rings.cpp",
            "line": 131,
            "description": "Adds a ring to the collection.",
            "example": [
                "\n```\nvar ring1 = new gdal.LinearRing();\nring1.points.add(0,0);\nring1.points.add(1,0);\nring1.points.add(1,1);\nring1.points.add(0,1);\nring1.points.add(0,0);\n\n// one at a time:\npolygon.rings.add(ring1);\n\n// many at once:\npolygon.rings.add([ring1, ...]);```"
            ],
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "ring(s)",
                    "description": "",
                    "type": "gdal.LinearRing"
                }
            ],
            "class": "gdal.PolygonRings"
        },
        {
            "file": "src/collections/rasterband_overviews.cpp",
            "line": 80,
            "description": "Fetches the overview at the provided index.",
            "itemtype": "method",
            "name": "get",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "index",
                    "description": "0-based index",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.RasterBand"
            },
            "class": "gdal.RasterBandOverviews"
        },
        {
            "file": "src/collections/rasterband_overviews.cpp",
            "line": 113,
            "description": "Fetch best sampling overview.\n\nReturns the most reduced overview of the given band that still satisfies the\ndesired number of samples. This function can be used with zero as the number\nof desired samples to fetch the most reduced overview. The same band as was\npassed in will be returned if it has not overviews, or if none of the overviews\nhave enough samples.",
            "itemtype": "method",
            "name": "getBySampleCount",
            "params": [
                {
                    "name": "samples",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.RasterBand"
            },
            "class": "gdal.RasterBandOverviews"
        },
        {
            "file": "src/collections/rasterband_overviews.cpp",
            "line": 145,
            "description": "Returns the number of overviews.",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "gdal.RasterBandOverviews"
        },
        {
            "file": "src/collections/rasterband_pixels.cpp",
            "line": 93,
            "description": "Returns the value at the x, y coordinate.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "gdal.RasterBandPixels"
        },
        {
            "file": "src/collections/rasterband_pixels.cpp",
            "line": 127,
            "description": "Sets the value at the x, y coordinate.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "gdal.RasterBandPixels"
        },
        {
            "file": "src/collections/rasterband_pixels.cpp",
            "line": 162,
            "description": "Reads a region of pixels.",
            "itemtype": "method",
            "name": "read",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "The [TypedArray](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView#Typed_array_subclasses) to put the data in. A new array is created if not given.",
                    "type": "TypedArray",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "buffer_width",
                            "description": "",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "x_size"
                        },
                        {
                            "name": "buffer_height",
                            "description": "",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "y_size"
                        },
                        {
                            "name": "data_type",
                            "description": "See {{#crossLink \"Constants (GDT)\"}}GDT constants{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "pixel_space",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "line_space",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A [TypedArray](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView#Typed_array_subclasses) of values.",
                "type": "TypedArray"
            },
            "class": "gdal.RasterBandPixels"
        },
        {
            "file": "src/collections/rasterband_pixels.cpp",
            "line": 271,
            "description": "Writes a region of pixels.",
            "itemtype": "method",
            "name": "write",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "The [TypedArray](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView#Typed_array_subclasses) to write to the band.",
                    "type": "TypedArray"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "buffer_width",
                            "description": "",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "x_size"
                        },
                        {
                            "name": "buffer_height",
                            "description": "",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "y_size"
                        },
                        {
                            "name": "pixel_space",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "line_space",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "gdal.RasterBandPixels"
        },
        {
            "file": "src/collections/rasterband_pixels.cpp",
            "line": 357,
            "description": "Reads a block of pixels.",
            "itemtype": "method",
            "name": "readBlock",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "The [TypedArray](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView#Typed_array_subclasses) to put the data in. A new array is created if not given.",
                    "type": "TypedArray",
                    "optional": true
                }
            ],
            "return": {
                "description": "A [TypedArray](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView#Typed_array_subclasses) of values.",
                "type": "TypedArray"
            },
            "class": "gdal.RasterBandPixels"
        },
        {
            "file": "src/collections/rasterband_pixels.cpp",
            "line": 415,
            "description": "Writes a block of pixels.",
            "itemtype": "method",
            "name": "writeBlock",
            "throws": {
                "description": "Error"
            },
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "The [TypedArray](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView#Typed_array_subclasses) of values to write to the band.",
                    "type": "TypedArray"
                }
            ],
            "class": "gdal.RasterBandPixels"
        },
        {
            "file": "src/utils/translate_options.hpp",
            "line": 26,
            "class": "gdal"
        },
        {
            "file": "src/utils/translate_options.hpp",
            "line": 28,
            "class": "gdal"
        },
        {
            "file": "src/utils/translate_options.hpp",
            "line": 30,
            "class": "gdal"
        },
        {
            "file": "src/utils/translate_options.hpp",
            "line": 51,
            "class": "gdal"
        },
        {
            "file": "src/utils/translate_options.hpp",
            "line": 53,
            "class": "gdal"
        },
        {
            "file": "src/utils/translate_options.hpp",
            "line": 55,
            "description": "and freed with GDALTranslateOptionsNew() and GDALTranslateOptionsFree() respectively.",
            "class": "gdal"
        },
        {
            "file": "src/gdal.hpp",
            "line": 114,
            "description": "Convert decimal degrees to degrees, minutes, and seconds string",
            "static": 1,
            "itemtype": "method",
            "name": "decToDMS",
            "params": [
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "axis",
                    "description": "`\"lat\"` or `\"long\"`",
                    "type": "String"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "2"
                }
            ],
            "return": {
                "description": "A string nndnn'nn.nn'\"L where n is a number and L is either N or E",
                "type": "String"
            },
            "class": "gdal"
        },
        {
            "file": "src/gdal_algorithms.cpp",
            "line": 24,
            "description": "Fill raster regions by interpolation from edges.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fillNodata",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "This band to be updated in-place.",
                            "type": "gdal.RasterBand"
                        },
                        {
                            "name": "mask",
                            "description": "Mask band",
                            "type": "gdal.RasterBand",
                            "optional": true
                        },
                        {
                            "name": "searchDist",
                            "description": "The maximum distance (in pixels) that the algorithm will search out for values to interpolate.",
                            "type": "Number"
                        },
                        {
                            "name": "smoothingIterations",
                            "description": "The number of 3x3 average filter smoothing iterations to run after the interpolation to dampen artifacts.",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "class": "gdal"
        },
        {
            "file": "src/gdal_algorithms.cpp",
            "line": 64,
            "description": "Create vector contours from raster DEM.\n\nThis algorithm will generate contour vectors for the input raster band on the\nrequested set of contour levels. The vector contours are written to the passed\nin vector layer. Also, a NODATA value may be specified to identify pixels\nthat should not be considered in contour line generation.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "contourGenerate",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "",
                            "type": "gdal.RasterBand"
                        },
                        {
                            "name": "dst",
                            "description": "",
                            "type": "gdal.Layer"
                        },
                        {
                            "name": "offset",
                            "description": "The \"offset\" relative to which contour intervals are applied. This is normally zero, but could be different. To generate 10m contours at 5, 15, 25, ... the offset would be 5.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "interval",
                            "description": "The elevation interval between contours generated.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "100"
                        },
                        {
                            "name": "fixedLevels",
                            "description": "A list of fixed contour levels at which contours should be generated. Overrides interval/base options if set.",
                            "type": "Number[]",
                            "optional": true
                        },
                        {
                            "name": "nodata",
                            "description": "The value to use as a \"nodata\" value. That is, a pixel value which should be ignored in generating contours as if the value of the pixel were not known.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "idField",
                            "description": "A field index to indicate where a unique id should be written for each feature (contour) written.",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "elevField",
                            "description": "A field index to indicate where the elevation value of the contour should be written.",
                            "type": "Integer",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "gdal"
        },
        {
            "file": "src/gdal_algorithms.cpp",
            "line": 138,
            "description": "Removes small raster polygons.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "sieveFilter",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "",
                            "type": "gdal.RasterBand"
                        },
                        {
                            "name": "dst",
                            "description": "Output raster band. It may be the same as src band to update the source in place.",
                            "type": "gdal.RasterBand"
                        },
                        {
                            "name": "mask",
                            "description": "All pixels in the mask band with a value other than zero will be considered suitable for inclusion in polygons.",
                            "type": "gdal.RasterBand",
                            "optional": true
                        },
                        {
                            "name": "threshold",
                            "description": "Raster polygons with sizes smaller than this will be merged into their largest neighbour.",
                            "type": "Number"
                        },
                        {
                            "name": "connectedness",
                            "description": "Either 4 indicating that diagonal pixels are not considered directly adjacent for polygon membership purposes or 8 indicating they are.",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "4"
                        }
                    ]
                }
            ],
            "class": "gdal"
        },
        {
            "file": "src/gdal_algorithms.cpp",
            "line": 186,
            "description": "Compute checksum for image region.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "checksumImage",
            "static": 1,
            "params": [
                {
                    "name": "src",
                    "description": "",
                    "type": "gdal.RasterBand"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "src.width"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "src.height"
                }
            ],
            "return": {
                "description": "integer"
            },
            "class": "gdal"
        },
        {
            "file": "src/gdal_algorithms.cpp",
            "line": 235,
            "description": "Creates vector polygons for all connected regions of pixels in the raster\nsharing a common pixel value. Each polygon is created with an attribute\nindicating the pixel value of that polygon. A raster mask may also be\nprovided to determine which pixels are eligible for processing.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "polygonize",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "",
                            "type": "gdal.RasterBand"
                        },
                        {
                            "name": "dst",
                            "description": "",
                            "type": "gdal.Layer"
                        },
                        {
                            "name": "mask",
                            "description": "",
                            "type": "gdal.RasterBand",
                            "optional": true
                        },
                        {
                            "name": "pixValField",
                            "description": "The attribute field index indicating the feature attribute into which the pixel value of the polygon should be written.",
                            "type": "Integer"
                        },
                        {
                            "name": "connectedness",
                            "description": "Either 4 indicating that diagonal pixels are not considered directly adjacent for polygon membership purposes or 8 indicating they are.",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "4"
                        },
                        {
                            "name": "useFloats",
                            "description": "Use floating point buffers instead of int buffers.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "gdal"
        },
        {
            "file": "src/gdal_algorithms.cpp",
            "line": 297,
            "description": "Calls gdal_translate.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "translate",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "the source dataset handle",
                            "type": "gdal.Dataset"
                        },
                        {
                            "name": "dst",
                            "description": "the destination dataset path",
                            "type": "String"
                        },
                        {
                            "name": "outputFormat",
                            "description": "the desired output format. see ({{#crossLink \"gdal.GDALDrivers\"}}drivers list{{/crossLink}}) for possible options.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "newly created dataset",
                "type": "gdal.Dataset"
            },
            "class": "gdal"
        },
        {
            "file": "src/gdal_coordinate_transformation.cpp",
            "line": 169,
            "description": "Transform point from source to destination space.",
            "example": [
                "\n```\npt = transform.transformPoint(0, 0, 0);\npt = transform.transformPoint({x: 0, y: 0, z: 0});```"
            ],
            "itemtype": "method",
            "name": "transformPoint",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A regular object containing `x`, `y`, `z` properties.",
                "type": "Object"
            },
            "class": "gdal.CoordinateTransformation"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 212,
            "description": "Fetch metadata.",
            "itemtype": "method",
            "name": "getMetadata",
            "params": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 242,
            "description": "Determines if the dataset supports the indicated operation.",
            "itemtype": "method",
            "name": "testCapability",
            "params": [
                {
                    "name": "capability",
                    "description": "(see {{#crossLink \"Constants (ODsC)\"}}capability list{{/crossLink}})",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 275,
            "description": "Get output projection for GCPs.",
            "itemtype": "method",
            "name": "getGCPProjection",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 302,
            "description": "Closes the dataset to further operations.",
            "itemtype": "method",
            "name": "close",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 321,
            "description": "Flushes all changes to disk.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "flush",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 359,
            "description": "Execute an SQL statement against the data store.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "executeSQL",
            "params": [
                {
                    "name": "statement",
                    "description": "SQL statement to execute.",
                    "type": "String"
                },
                {
                    "name": "spatial_filter",
                    "description": "Geometry which represents a spatial filter.",
                    "type": "gdal.Geometry",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "dialect",
                    "description": "Allows control of the statement dialect. If set to `null`, the OGR SQL engine will be used, except for RDBMS drivers that will use their dedicated SQL engine, unless `\"OGRSQL\"` is explicitely passed as the dialect. Starting with OGR 1.10, the `\"SQLITE\"` dialect can also be used.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Layer"
            },
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 410,
            "description": "Fetch files forming dataset.\n\nReturns a list of files believed to be part of this dataset. If it returns an\nempty list of files it means there is believed to be no local file system files\nassociated with the dataset (for instance a virtual dataset).\n\nReturns an empty array for vector datasets if GDAL version is below 2.0",
            "itemtype": "method",
            "name": "getFileList",
            "return": {
                "description": "",
                "type": "String[]"
            },
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 464,
            "description": "Fetches GCPs.",
            "itemtype": "method",
            "name": "getGCPs",
            "return": {
                "description": "",
                "type": "Object[]"
            },
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 519,
            "description": "Sets GCPs.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "setGCPs",
            "params": [
                {
                    "name": "gcps",
                    "description": "",
                    "type": "Object[]"
                },
                {
                    "name": "projection",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 601,
            "description": "Builds dataset overviews.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "buildOverviews",
            "params": [
                {
                    "name": "resampling",
                    "description": "`\"NEAREST\"`, `\"GAUSS\"`, `\"CUBIC\"`, `\"AVERAGE\"`, `\"MODE\"`, `\"AVERAGE_MAGPHASE\"` or `\"NONE\"`",
                    "type": "String"
                },
                {
                    "name": "overviews",
                    "description": "",
                    "type": "Integer[]"
                },
                {
                    "name": "bands",
                    "description": "Note: Generation of overviews in external TIFF currently only supported when operating on all bands.",
                    "type": "Integer[]",
                    "optional": true
                }
            ],
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 686,
            "readonly": "",
            "itemtype": "attribute",
            "name": "description",
            "type": "String",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 717,
            "description": "Raster dimensions. An object containing `x` and `y` properties.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "rasterSize",
            "type": "Object",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 758,
            "description": "Spatial reference associated with raster dataset",
            "throws": {
                "description": "Error"
            },
            "itemtype": "attribute",
            "name": "srs",
            "type": "{gdal.SpatialReference}",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 802,
            "description": "An affine transform which maps pixel/line coordinates into georeferenced space using the following relationship:",
            "example": [
                "\n```\nvar GT = dataset.geoTransform;\nvar Xgeo = GT[0] + Xpixel*GT[1] + Yline*GT[2];\nvar Ygeo = GT[3] + Xpixel*GT[4] + Yline*GT[5];```"
            ],
            "itemtype": "attribute",
            "name": "geoTransform",
            "type": "{Array}",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 852,
            "readonly": "",
            "itemtype": "attribute",
            "name": "driver",
            "type": "{gdal.Driver}",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 969,
            "readonly": "",
            "itemtype": "attribute",
            "name": "bands",
            "type": "{gdal.DatasetBands}",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_dataset.cpp",
            "line": 980,
            "readonly": "",
            "itemtype": "attribute",
            "name": "layers",
            "type": "{gdal.DatasetLayers}",
            "class": "gdal.Dataset"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 180,
            "readonly": "",
            "itemtype": "attribute",
            "name": "description",
            "type": "String",
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 200,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "deleteDataset",
            "params": [
                {
                    "name": "filename",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 233,
            "description": "Create a new dataset with this driver.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "filename",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "x_size",
                    "description": "raster width in pixels (ignored for vector datasets)",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y_size",
                    "description": "raster height in pixels (ignored for vector datasets)",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "band_count",
                    "description": "",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "data_type",
                    "description": "pixel data type (ignored for vector datasets) (see {{#crossLink \"Constants (GDT)\"}}data types{{/crossLink}})",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "gdal.GDT_Byte"
                },
                {
                    "name": "creation_options",
                    "description": "An array or object containing driver-specific dataset creation options",
                    "type": "String[]|object",
                    "optional": true
                }
            ],
            "return": {
                "description": "gdal.Dataset"
            },
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 303,
            "description": "Create a copy of a dataset.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "createCopy",
            "params": [
                {
                    "name": "filename",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "gdal.Dataset"
                },
                {
                    "name": "strict",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "options",
                    "description": "An array or object containing driver-specific dataset creation options",
                    "type": "String[]|object",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "gdal.Dataset"
            },
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 385,
            "description": "Copy the files of a dataset.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "copyFiles",
            "params": [
                {
                    "name": "name_old",
                    "description": "New name for the dataset.",
                    "type": "String"
                },
                {
                    "name": "name_new",
                    "description": "Old name of the dataset.",
                    "type": "String"
                }
            ],
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 419,
            "description": "Renames the dataset.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "rename",
            "params": [
                {
                    "name": "new_name",
                    "description": "New name for the dataset.",
                    "type": "String"
                },
                {
                    "name": "old_name",
                    "description": "Old name of the dataset.",
                    "type": "String"
                }
            ],
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 453,
            "description": "Returns metadata about the driver.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "getMetadata",
            "params": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Object"
            },
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_driver.cpp",
            "line": 488,
            "description": "Opens a dataset.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "description": "The mode to use to open the file: `\"r\"` or `\"r+\"`",
                    "type": "String",
                    "optional": true,
                    "optdefault": "`\"r\"`"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Dataset"
            },
            "class": "gdal.Driver"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 179,
            "description": "Returns the geometry of the feature.",
            "itemtype": "method",
            "name": "getGeometry",
            "return": {
                "description": "",
                "type": "gdal.Geometry"
            },
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 205,
            "description": "Returns the definition of a particular field at an index.",
            "itemtype": "method",
            "name": "getFieldDefn",
            "params": [
                {
                    "name": "index",
                    "description": "Field index (0-based)",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.FieldDefn"
            },
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 234,
            "description": "Sets the feature's geometry.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "setGeometry",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 263,
            "description": "Determines if the features are the same.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "feature",
                    "description": "",
                    "type": "gdal.Feature"
                }
            ],
            "return": {
                "description": "`true` if the features are the same, `false` if different",
                "type": "Boolean"
            },
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 272,
            "description": "Clones the feature.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "gdal.Feature"
            },
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 289,
            "description": "Releases the feature from memory.",
            "itemtype": "method",
            "name": "destroy",
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 306,
            "description": "Set one feature from another. Overwrites the contents of this feature\nfrom the geometry and attributes of another.",
            "example": [
                "\n```\nvar feature1 = new gdal.Feature(defn);\nvar feature2 = new gdal.Feature(defn);\nfeature1.setGeometry(new gdal.Point(5, 10));\nfeature1.fields.set([5, 'test', 3.14]);\nfeature2.setFrom(feature1);```"
            ],
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "setFrom",
            "params": [
                {
                    "name": "feature",
                    "description": "",
                    "type": "gdal.Feature"
                },
                {
                    "name": "*index_map",
                    "description": "Array of the indices (integers) of the feature's fields stored at the corresponding index of the source feature's fields. A value of -1 should be used to ignore the source's field. The array should not be `null` and be as long as the number of fields in the source feature.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "forgiving",
                    "description": "`true` if the operation should continue despite lacking output fields matching some of the source fields.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 381,
            "readonly": "",
            "itemtype": "attribute",
            "name": "fields",
            "type": "{gdal.FeatureFields}",
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 392,
            "itemtype": "attribute",
            "name": "fid",
            "type": "{Number}",
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature.cpp",
            "line": 407,
            "readonly": "",
            "itemtype": "attribute",
            "name": "defn",
            "type": "{gdal.FeatureDefn}",
            "class": "gdal.Feature"
        },
        {
            "file": "src/gdal_feature_defn.cpp",
            "line": 136,
            "description": "Clones the feature definition.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "gdal.FeatureDefn"
            },
            "class": "gdal.FeatureDefn"
        },
        {
            "file": "src/gdal_feature_defn.cpp",
            "line": 149,
            "readonly": "",
            "itemtype": "attribute",
            "name": "name",
            "type": "{String}",
            "class": "gdal.FeatureDefn"
        },
        {
            "file": "src/gdal_feature_defn.cpp",
            "line": 161,
            "description": "WKB geometry type ({{#crossLink \"Constants (wkbGeometryType)\"}}see table{{/crossLink}})",
            "itemtype": "attribute",
            "name": "geomType",
            "type": "{Integer}",
            "class": "gdal.FeatureDefn"
        },
        {
            "file": "src/gdal_feature_defn.cpp",
            "line": 174,
            "itemtype": "attribute",
            "name": "geomIgnored",
            "type": "{Boolean}",
            "class": "gdal.FeatureDefn"
        },
        {
            "file": "src/gdal_feature_defn.cpp",
            "line": 185,
            "itemtype": "attribute",
            "name": "styleIgnored",
            "type": "{Boolean}",
            "class": "gdal.FeatureDefn"
        },
        {
            "file": "src/gdal_feature_defn.cpp",
            "line": 196,
            "readonly": "",
            "itemtype": "attribute",
            "name": "fields",
            "type": "{gdal.FeatureDefnFields}",
            "class": "gdal.FeatureDefn"
        },
        {
            "file": "src/gdal_field_defn.cpp",
            "line": 137,
            "itemtype": "attribute",
            "name": "name",
            "type": "{String}",
            "class": "gdal.FieldDefn"
        },
        {
            "file": "src/gdal_field_defn.cpp",
            "line": 148,
            "description": "Data type (see {{#crossLink \"Constants (OFT)\"}}OFT constants{{/crossLink}})",
            "itemtype": "attribute",
            "name": "type",
            "type": "{String}",
            "class": "gdal.FieldDefn"
        },
        {
            "file": "src/gdal_field_defn.cpp",
            "line": 161,
            "itemtype": "attribute",
            "name": "ignored",
            "type": "{Boolean}",
            "class": "gdal.FieldDefn"
        },
        {
            "file": "src/gdal_field_defn.cpp",
            "line": 172,
            "description": "Field justification (see {{#crossLink \"Constants (OJ)\"}}OJ constants{{/crossLink}})",
            "itemtype": "attribute",
            "name": "justification",
            "type": "{String}",
            "class": "gdal.FieldDefn"
        },
        {
            "file": "src/gdal_field_defn.cpp",
            "line": 194,
            "itemtype": "attribute",
            "name": "width",
            "type": "{Integer}",
            "class": "gdal.FieldDefn"
        },
        {
            "file": "src/gdal_field_defn.cpp",
            "line": 205,
            "itemtype": "attribute",
            "name": "precision",
            "type": "{Integer}",
            "class": "gdal.FieldDefn"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 219,
            "description": "Closes any un-closed rings.",
            "itemtype": "method",
            "name": "closeRings",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 226,
            "description": "Clears the geometry.",
            "itemtype": "method",
            "name": "empty",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 233,
            "description": "Swaps x, y coordinates.",
            "itemtype": "method",
            "name": "swapXY",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 240,
            "description": "Determines if the geometry is empty.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 248,
            "description": "Determines if the geometry is valid.",
            "itemtype": "method",
            "name": "isValid",
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 256,
            "description": "Determines if the geometry is simple.",
            "itemtype": "method",
            "name": "isSimple",
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 264,
            "description": "Determines if the geometry is a ring.",
            "itemtype": "method",
            "name": "isRing",
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 272,
            "description": "Determines if the two geometries intersect.",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 281,
            "description": "Determines if the two geometries equal each other.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 290,
            "description": "Determines if the two geometries are disjoint.",
            "itemtype": "method",
            "name": "disjoint",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 299,
            "description": "Determines if the two geometries touch.",
            "itemtype": "method",
            "name": "touches",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 308,
            "description": "Determines if the two geometries cross.",
            "itemtype": "method",
            "name": "crosses",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 317,
            "description": "Determines if the current geometry is within the provided geometry.",
            "itemtype": "method",
            "name": "within",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 326,
            "description": "Determines if the current geometry contains the provided geometry.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 335,
            "description": "Determines if the current geometry overlaps the provided geometry.",
            "itemtype": "method",
            "name": "overlaps",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 344,
            "description": "Computes the distance between the two geometries.",
            "itemtype": "method",
            "name": "distance",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "Number"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 353,
            "description": "Modify the geometry such it has no segment longer then the given distance.",
            "itemtype": "method",
            "name": "segmentize",
            "params": [
                {
                    "name": "segment_length",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Number"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 362,
            "description": "Apply arbitrary coordinate transformation to the geometry.\n\nThis method will transform the coordinates of a geometry from their current\nspatial reference system to a new target spatial reference system. Normally\nthis means reprojecting the vectors, but it could include datum shifts,\nand changes of units.\n\nNote that this method does not require that the geometry already have a\nspatial reference system. It will be assumed that they can be treated as\nhaving the source spatial reference system of the {{#crossLink \"gdal.CoordinateTransformation\"}}CoordinateTransformation{{/crossLink}}\nobject, and the actual SRS of the geometry will be ignored.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "transformation",
                    "description": "",
                    "type": "gdal.CoordinateTransformation"
                }
            ],
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 381,
            "description": "Transforms the geometry to match the provided {{#crossLink \"gdal.SpatialReference\"}}SpatialReference{{/crossLink}}.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "transformTo",
            "params": [
                {
                    "name": "srs",
                    "description": "",
                    "type": "gdal.SpatialReference"
                }
            ],
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 390,
            "description": "Clones the instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 403,
            "description": "Compute convex hull.",
            "itemtype": "method",
            "name": "convexHull",
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 416,
            "description": "Compute boundary.",
            "itemtype": "method",
            "name": "boundary",
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 429,
            "description": "Compute intersection with another geometry.",
            "itemtype": "method",
            "name": "intersection",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 448,
            "description": "Compute the union of this geometry with another.",
            "itemtype": "method",
            "name": "union",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 467,
            "description": "Compute the difference of this geometry with another.",
            "itemtype": "method",
            "name": "difference",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 486,
            "description": "Computes the symmetric difference of this geometry and the second geometry.",
            "itemtype": "method",
            "name": "symDifference",
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 505,
            "description": "Reduces the geometry complexity.",
            "itemtype": "method",
            "name": "simplify",
            "params": [
                {
                    "name": "tolerance",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 525,
            "description": "Reduces the geometry complexity while preserving the topology.",
            "itemtype": "method",
            "name": "simplifyPreserveTopology",
            "params": [
                {
                    "name": "tolerance",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 545,
            "description": "Buffers the geometry by the given distance.",
            "itemtype": "method",
            "name": "buffer",
            "params": [
                {
                    "name": "distance",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "segments",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 568,
            "description": "Convert a geometry into well known text format.",
            "itemtype": "method",
            "name": "toWKT",
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 595,
            "description": "Convert a geometry into well known binary format.",
            "itemtype": "method",
            "name": "toWKB",
            "params": [
                {
                    "name": "byte_order",
                    "description": "({{#crossLink \"Constants (wkbByteOrder)\"}}see options{{/crossLink}})",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"MSB\""
                },
                {
                    "name": "variant",
                    "description": "({{#crossLink \"Constants (wkbVariant)\"}}see options{{/crossLink}})",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"OGC\""
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 663,
            "description": "Convert a geometry into KML format.",
            "itemtype": "method",
            "name": "toKML",
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 686,
            "description": "Convert a geometry into GML format.",
            "itemtype": "method",
            "name": "toGML",
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 709,
            "description": "Convert a geometry into JSON format.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 732,
            "description": "Compute the centroid of the geometry.",
            "itemtype": "method",
            "name": "centroid",
            "return": {
                "description": "gdal.Point"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 751,
            "description": "Computes the bounding box (envelope).",
            "itemtype": "method",
            "name": "getEnvelope",
            "return": {
                "description": "Bounding envelope",
                "type": "gdal.Envelope"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 779,
            "description": "Computes the 3D bounding box (envelope).",
            "itemtype": "method",
            "name": "getEnvelope3D",
            "return": {
                "description": "Bounding envelope",
                "type": "gdal.Envelope3D"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 811,
            "description": "Creates a Geometry from a WKT string.",
            "static": 1,
            "itemtype": "method",
            "name": "fromWKT",
            "params": [
                {
                    "name": "wkt",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "srs",
                    "description": "",
                    "type": "gdal.SpatialReference",
                    "optional": true
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 846,
            "description": "Creates a Geometry from a WKB buffer.",
            "static": 1,
            "itemtype": "method",
            "name": "fromWKB",
            "params": [
                {
                    "name": "wkb",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "srs",
                    "description": "",
                    "type": "gdal.SpatialReference",
                    "optional": true
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 891,
            "description": "Creates an empty Geometry from a WKB type.",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "type",
                    "description": "WKB geometry type ({{#crossLink \"Constants (wkbGeometryType)\"}}available options{{/crossLink}})",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "gdal.Geometry"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 909,
            "itemtype": "attribute",
            "name": "srs",
            "type": "gdal.SpatialReference",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 937,
            "readonly": "",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 949,
            "description": "See {{#crossLink \"Constants (wkbGeometryType)\"}}wkbGeometryTypes{{/crossLink}}.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "wkbType",
            "type": "integer",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 962,
            "readonly": "",
            "itemtype": "attribute",
            "name": "wkbSize",
            "type": "Integer",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 974,
            "readonly": "",
            "itemtype": "attribute",
            "name": "dimension",
            "type": "Integer",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 986,
            "readonly": "",
            "itemtype": "attribute",
            "name": "coordinateDimension",
            "type": "Integer",
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 1015,
            "description": "Returns the Geometry subclass that matches the\ngiven WKB geometry type.",
            "static": 1,
            "itemtype": "method",
            "name": "getConstructor",
            "params": [
                {
                    "name": "type",
                    "description": "WKB geometry type ({{#crossLink \"Constants (wkbGeometryType)\"}}available options{{/crossLink}})",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Function"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometry.cpp",
            "line": 1032,
            "description": "Returns the Geometry subclass name that matches the\ngiven WKB geometry type.",
            "static": 1,
            "itemtype": "method",
            "name": "getName",
            "params": [
                {
                    "name": "type",
                    "description": "WKB geometry type ({{#crossLink \"Constants (wkbGeometryType)\"}}available options{{/crossLink}})",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "String"
            },
            "class": "gdal.Geometry"
        },
        {
            "file": "src/gdal_geometrycollection.cpp",
            "line": 142,
            "description": "Computes the combined area of the geometries.",
            "itemtype": "method",
            "name": "getArea",
            "return": {
                "description": "Number"
            },
            "class": "gdal.GeometryCollection"
        },
        {
            "file": "src/gdal_geometrycollection.cpp",
            "line": 150,
            "description": "Compute the length of a multicurve.",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "Number"
            },
            "class": "gdal.GeometryCollection"
        },
        {
            "file": "src/gdal_geometrycollection.cpp",
            "line": 158,
            "description": "All geometries represented by this collection.",
            "itemtype": "attribute",
            "name": "children",
            "type": "{gdal.GeometryCollectionChildren}",
            "class": "gdal.GeometryCollection"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 198,
            "description": "Flush pending changes to disk.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "flush",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 206,
            "description": "Determines if the dataset supports the indicated operation.",
            "itemtype": "method",
            "name": "testCapability",
            "params": [
                {
                    "name": "capability",
                    "description": "(see {{#crossLink \"Constants (OLC)\"}}capability list{{/crossLink}})",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 215,
            "description": "Fetch the extent of this layer.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "getExtent",
            "params": [
                {
                    "name": "force",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "Bounding envelope",
                "type": "gdal.Envelope"
            },
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 254,
            "description": "This method returns the current spatial filter for this layer.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "getSpatialFilter",
            "return": {
                "description": "",
                "type": "gdal.Geometry"
            },
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 274,
            "description": "This method sets the geometry to be used as a spatial filter when fetching\nfeatures via the `layer.features.next()` method. Only features that geometrically\nintersect the filter geometry will be returned.\n\nAlernatively you can pass it envelope bounds as individual arguments.",
            "example": [
                "\n```\nlayer.setSpatialFilter(geometry);\nlayer.setSpatialFilter(minX, minY, maxX, maxY);```"
            ],
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "setSpatialFilter",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "gdal.Geometry"
                }
            ],
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 325,
            "description": "Sets the attribute query string to be used when fetching features via the\n`layer.features.next()` method. Only features for which the query evaluates as\n`true` will be returned.\n\nThe query string should be in the format of an SQL WHERE clause. For instance\n\"population > 1000000 and population < 5000000\" where `population` is an\nattribute in the layer. The query format is normally a restricted form of\nSQL WHERE clause as described in the \"WHERE\" section of the [OGR SQL\ntutorial](http://www.gdal.org/ogr_sql.html). In some cases (RDBMS backed\ndrivers) the native capabilities of the database may be used to interprete\nthe WHERE clause in which case the capabilities will be broader than those\nof OGR SQL.",
            "example": [
                "\n```\nlayer.setAttributeFilter('population > 1000000 and population < 5000000');```"
            ],
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "setAttributeFilter",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 390,
            "readonly": "",
            "itemtype": "attribute",
            "name": "ds",
            "type": "{gdal.Dataset}",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 401,
            "readonly": "",
            "itemtype": "attribute",
            "name": "srs",
            "type": "{gdal.SpatialReference}",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 417,
            "readonly": "",
            "itemtype": "attribute",
            "name": "name",
            "type": "{String}",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 433,
            "readonly": "",
            "itemtype": "attribute",
            "name": "geomColumn",
            "type": "{String}",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 449,
            "readonly": "",
            "itemtype": "attribute",
            "name": "fidColumn",
            "type": "{String}",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 465,
            "readonly": "",
            "itemtype": "attribute",
            "name": "geomType",
            "type": "{Integer} (see {{#crossLink \"Constants (wkb)\"}}geometry types{{/crossLink}})",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 481,
            "readonly": "",
            "itemtype": "attribute",
            "name": "features",
            "type": "{gdal.LayerFeatures}",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_layer.cpp",
            "line": 492,
            "readonly": "",
            "itemtype": "attribute",
            "name": "fields",
            "type": "{gdal.LayerFields}",
            "class": "gdal.Layer"
        },
        {
            "file": "src/gdal_linearring.cpp",
            "line": 139,
            "description": "Computes the area enclosed by the ring.",
            "itemtype": "method",
            "name": "getArea",
            "return": {
                "description": "Number"
            },
            "class": "gdal.LinearRing"
        },
        {
            "file": "src/gdal_linestring.cpp",
            "line": 148,
            "description": "Computes the length of the line string.",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "Number"
            },
            "class": "gdal.LineString"
        },
        {
            "file": "src/gdal_linestring.cpp",
            "line": 156,
            "description": "Returns the point at the specified distance along the line string.",
            "itemtype": "method",
            "name": "value",
            "params": [
                {
                    "name": "distance",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.Point"
            },
            "class": "gdal.LineString"
        },
        {
            "file": "src/gdal_linestring.cpp",
            "line": 179,
            "description": "Add a segment of another linestring to this one.\n\nAdds the request range of vertices to the end of this line string in an efficient manner. If the start index is larger than the end index then the vertices will be reversed as they are copied.",
            "itemtype": "method",
            "name": "addSubLineString",
            "params": [
                {
                    "name": "line",
                    "description": "the other linestring",
                    "type": "gdal.LineString"
                },
                {
                    "name": "start",
                    "description": "the first vertex to copy, defaults to 0 to start with the first vertex in the other linestring",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "end",
                    "description": "the last vertex to copy, defaults to -1 indicating the last vertex of the other linestring",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "-1"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "gdal.LineString"
        },
        {
            "file": "src/gdal_linestring.cpp",
            "line": 217,
            "description": "Points that make up the line string.",
            "itemtype": "attribute",
            "name": "points",
            "type": "{gdal.LineStringPoints}",
            "class": "gdal.LineString"
        },
        {
            "file": "src/gdal_multilinestring.cpp",
            "line": 137,
            "description": "Converts it to a polygon.",
            "itemtype": "method",
            "name": "polygonize",
            "return": {
                "description": "",
                "type": "gdal.Polygon"
            },
            "class": "gdal.MultiLineString"
        },
        {
            "file": "src/gdal_multipolygon.cpp",
            "line": 137,
            "description": "Unions all the geometries and returns the result.",
            "itemtype": "method",
            "name": "unionCascaded",
            "return": {
                "description": "",
                "type": "gdal.Geometry"
            },
            "class": "gdal.MultiPolygon"
        },
        {
            "file": "src/gdal_multipolygon.cpp",
            "line": 152,
            "description": "Computes the combined area of the collection.",
            "itemtype": "method",
            "name": "getArea",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "gdal.MultiPolygon"
        },
        {
            "file": "src/gdal_point.cpp",
            "line": 153,
            "itemtype": "attribute",
            "name": "x",
            "type": "Number",
            "class": "gdal.Point"
        },
        {
            "file": "src/gdal_point.cpp",
            "line": 178,
            "itemtype": "attribute",
            "name": "y",
            "type": "Number",
            "class": "gdal.Point"
        },
        {
            "file": "src/gdal_point.cpp",
            "line": 203,
            "itemtype": "attribute",
            "name": "z",
            "type": "Number",
            "class": "gdal.Point"
        },
        {
            "file": "src/gdal_polygon.cpp",
            "line": 140,
            "description": "Computes the area of the polygon.",
            "itemtype": "method",
            "name": "getArea",
            "return": {
                "description": "Number"
            },
            "class": "gdal.Polygon"
        },
        {
            "file": "src/gdal_polygon.cpp",
            "line": 148,
            "description": "The rings that make up the polygon geometry.",
            "itemtype": "attribute",
            "name": "rings",
            "type": "{gdal.PolygonRings}",
            "class": "gdal.Polygon"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 179,
            "description": "Saves changes to disk.",
            "itemtype": "method",
            "name": "flush",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 186,
            "description": "Return the status flags of the mask band associated with the band.\n\nThe result will be a bitwise OR-ed set of status flags with the following\navailable definitions that may be extended in the future:\n\n  - `GMF_ALL_VALID` (`0x01`): There are no invalid pixels, all mask values will be 255. When used this will normally be the only flag set.\n  - `GMF_PER_DATASET` (`0x02`): The mask band is shared between all bands on the dataset.\n  - `GMF_ALPHA` (`0x04`): The mask band is actually an alpha band and may have values other than 0 and 255.\n  - `GMF_NODATA` (`0x08`): Indicates the mask is actually being generated from nodata values. (mutually exclusive of `GMF_ALPHA`)",
            "itemtype": "method",
            "name": "getMaskFlags",
            "return": {
                "description": "Mask flags",
                "type": "Integer"
            },
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 204,
            "description": "Adds a mask band to the current band.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "createMaskBand",
            "params": [
                {
                    "name": "flags",
                    "description": "Mask flags",
                    "type": "Integer"
                }
            ],
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 215,
            "description": "Return the mask band associated with the band.",
            "itemtype": "method",
            "name": "getMaskBand",
            "return": {
                "description": "",
                "type": "gdal.RasterBand"
            },
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 241,
            "description": "Fill this band with a constant value.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fill",
            "params": [
                {
                    "name": "real_value",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "imaginary_value",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 292,
            "description": "Fetch image statistics.\n\nReturns the minimum, maximum, mean and standard deviation of all pixel values\nin this band. If approximate statistics are sufficient, the `allow_approximation`\nargument can be set to `true` in which case overviews, or a subset of image tiles\nmay be used in computing the statistics.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "getStatistics",
            "params": [
                {
                    "name": "allow_approximation",
                    "description": "If `true` statistics may be computed based on overviews or a subset of all tiles.",
                    "type": "Boolean"
                },
                {
                    "name": "force",
                    "description": "If `false` statistics will only be returned if it can be done without rescanning the image.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Statistics containing `\"min\"`, `\"max\"`, `\"mean\"`, `\"std_dev\"` properties.",
                "type": "Object"
            },
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 343,
            "description": "Computes image statistics.\n\nReturns the minimum, maximum, mean and standard deviation of all pixel values\nin this band. If approximate statistics are sufficient, the `allow_approximation`\nargument can be set to `true` in which case overviews, or a subset of image tiles\nmay be used in computing the statistics.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "computeStatistics",
            "params": [
                {
                    "name": "allow_approximation",
                    "description": "If `true` statistics may be computed based on overviews or a subset of all tiles.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Statistics containing `\"min\"`, `\"max\"`, `\"mean\"`, `\"std_dev\"` properties.",
                "type": "Object"
            },
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 388,
            "description": "Set statistics on the band. This method can be used to store\nmin/max/mean/standard deviation statistics.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "setStatistics",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "mean",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "std_dev",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 424,
            "description": "Returns band metadata",
            "itemtype": "method",
            "name": "getMetadata",
            "params": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 446,
            "readonly": "",
            "itemtype": "attribute",
            "name": "ds",
            "type": "{gdal.Dataset}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 457,
            "readonly": "",
            "itemtype": "attribute",
            "name": "overviews",
            "type": "{gdal.RasterBandOverviews}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 468,
            "readonly": "",
            "itemtype": "attribute",
            "name": "pixels",
            "type": "{gdal.RasterBandPixels}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 479,
            "readonly": "",
            "itemtype": "attribute",
            "name": "id",
            "type": "{Integer|null}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 504,
            "description": "Name of of band.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "description",
            "type": "{string}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 523,
            "description": "Size object containing `\"x\"` and `\"y\"` properties.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "size",
            "type": "{Object}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 545,
            "description": "Size object containing `\"x\"` and `\"y\"` properties.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "blockSize",
            "type": "{Object}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 570,
            "description": "Minimum value for this band.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "minimum",
            "type": "{Number}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 591,
            "description": "Maximum value for this band.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "maximum",
            "type": "{Number}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 612,
            "description": "Raster value offset.",
            "itemtype": "attribute",
            "name": "offset",
            "type": "{Number}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 632,
            "description": "Raster value scale.",
            "itemtype": "attribute",
            "name": "scale",
            "type": "{Number}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 652,
            "description": "No data value for this band.",
            "itemtype": "attribute",
            "name": "noDataValue",
            "type": "{Number|null}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 679,
            "description": "Raster unit type (name for the units of this raster's values).\nFor instance, it might be `\"m\"` for an elevation model in meters,\nor `\"ft\"` for feet. If no units are available, a value of `\"\"`\nwill be returned.",
            "itemtype": "attribute",
            "name": "unitType",
            "type": "{String}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 701,
            "description": "Pixel data type ({{#crossLink \"Constants (GDT)\"}}see GDT constants{{/crossLink}}) used for this band.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "dataType",
            "type": "{String|Undefined}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 723,
            "description": "Indicates if the band is read-only.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "readOnly",
            "type": "{Boolean}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 743,
            "description": "An indicator if the underlying datastore can compute arbitrary overviews\nefficiently, such as is the case with OGDI over a network. Datastores with\narbitrary overviews don't generally have any fixed overviews, but GDAL's\n`RasterIO()` method can be used in downsampling mode to get overview\ndata efficiently.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "hasArbitraryOverviews",
            "type": "{Boolean}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 767,
            "description": "List of list of category names for this raster.",
            "itemtype": "attribute",
            "name": "categoryNames",
            "type": "{Array}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_rasterband.cpp",
            "line": 797,
            "description": "Color interpretation mode ({{#crossLink \"Constants (GCI)\"}}see GCI constants{{/crossLink}}).",
            "itemtype": "attribute",
            "name": "colorInterpretation",
            "type": "{string}",
            "class": "gdal.RasterBand"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 189,
            "description": "Set a GeogCS based on well known name.",
            "itemtype": "method",
            "name": "setWellKnownGeogCS",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 197,
            "description": "Convert in place to ESRI WKT format.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "morphToESRI",
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 205,
            "description": "Convert in place from ESRI WKT format.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "morphFromESRI",
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 213,
            "description": "This method returns `true` if EPSG feels this geographic coordinate system\nshould be treated as having lat/long coordinate ordering.\n\nCurrently this returns `true` for all geographic coordinate systems with an\nEPSG code set, and AXIS values set defining it as lat, long. Note that\ncoordinate systems with an EPSG code and no axis settings will be assumed\nto not be lat/long.\n\n`false` will be returned for all coordinate systems that are not geographic,\nor that do not have an EPSG code set.",
            "itemtype": "method",
            "name": "EPSGTreatsAsLatLong",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 230,
            "description": "This method returns `true` if EPSG feels this projected coordinate system should\nbe treated as having northing/easting coordinate ordering.",
            "itemtype": "method",
            "name": "EPSGTreatsAsNorthingEasting",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 239,
            "description": "Check if geocentric coordinate system.",
            "itemtype": "method",
            "name": "isGeocentric",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 247,
            "description": "Check if geographic coordinate system.",
            "itemtype": "method",
            "name": "isGeographic",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 255,
            "description": "Check if projected coordinate system.",
            "itemtype": "method",
            "name": "isProjected",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 263,
            "description": "Check if local coordinate system.",
            "itemtype": "method",
            "name": "isLocal",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 271,
            "description": "Check if vertical coordinate system.",
            "itemtype": "method",
            "name": "isVertical",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 279,
            "description": "Check if compound coordinate system.",
            "itemtype": "method",
            "name": "isCompound",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 287,
            "description": "Do the GeogCS'es match?",
            "itemtype": "method",
            "name": "isSameGeogCS",
            "params": [
                {
                    "name": "srs",
                    "description": "",
                    "type": "gdal.SpatialReference"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 296,
            "description": "Do the VertCS'es match?",
            "itemtype": "method",
            "name": "isSameVertCS",
            "params": [
                {
                    "name": "srs",
                    "description": "",
                    "type": "gdal.SpatialReference"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 305,
            "description": "Do these two spatial references describe the same system?",
            "itemtype": "method",
            "name": "isSame",
            "params": [
                {
                    "name": "srs",
                    "description": "",
                    "type": "gdal.SpatialReference"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 314,
            "description": "Set EPSG authority info if possible.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "autoIdentifyEPSG",
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 322,
            "description": "Clones the spatial reference.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 335,
            "description": "Make a duplicate of the GEOGCS node of this OGRSpatialReference object.",
            "itemtype": "method",
            "name": "cloneGeogCS",
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 348,
            "description": "Get the authority name for a node. The most common authority is \"EPSG\".",
            "itemtype": "method",
            "name": "getAuthorityName",
            "params": [
                {
                    "name": "target_key",
                    "description": "The partial or complete path to the node to get an authority from. ie. `\"PROJCS\"`, `\"GEOGCS\"`, \"`GEOGCS|UNIT\"` or `null` to search for an authority node on the root element.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 367,
            "description": "Get the authority code for a node.",
            "itemtype": "method",
            "name": "getAuthorityCode",
            "params": [
                {
                    "name": "target_key",
                    "description": "The partial or complete path to the node to get an authority from. ie. `\"PROJCS\"`, `\"GEOGCS\"`, \"`GEOGCS|UNIT\"` or `null` to search for an authority node on the root element.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 386,
            "description": "Convert this SRS into WKT format.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "toWKT",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 412,
            "description": "Convert this SRS into a a nicely formatted WKT string for display to a person.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "toPrettyWKT",
            "params": [
                {
                    "name": "simplify",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 442,
            "description": "Export coordinate system in PROJ.4 format.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "toProj4",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 473,
            "description": "Export coordinate system in XML format.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "toXML",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 499,
            "description": "Fetch indicated attribute of named node.",
            "itemtype": "method",
            "name": "getAttrValue",
            "params": [
                {
                    "name": "node_name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "attr_index",
                    "description": "",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 519,
            "description": "Creates a spatial reference from a WKT string.",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromWKT",
            "params": [
                {
                    "name": "wkt",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 546,
            "description": "Creates a spatial reference from a Proj.4 string.",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromProj4",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 572,
            "description": "Creates a spatial reference from a WMSAUTO string.\n\nNote that the WMS 1.3 specification does not include the units code, while\napparently earlier specs do. GDAL tries to guess around this.",
            "example": [
                "\n```\nvar wms = 'AUTO:42001,99,8888';\nvar ref = gdal.SpatialReference.fromWMSAUTO(wms);```"
            ],
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromWMSAUTO",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 606,
            "description": "Import coordinate system from XML format (GML only currently).",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromXML",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 632,
            "description": "Initialize from OGC URN.\n\nThe OGC URN should be prefixed with \"urn:ogc:def:crs:\" per recommendation\npaper 06-023r1. Currently EPSG and OGC authority values are supported,\nincluding OGC auto codes, but not including CRS1 or CRS88 (NAVD88).",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromURN",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 662,
            "description": "Initialize from OGC URL.\n\nThe OGC URL should be prefixed with \"http://opengis.net/def/crs\" per best\npractice paper 11-135. Currently EPSG and OGC authority values are supported,\nincluding OGC auto codes, but not including CRS1 or CRS88 (NAVD88).",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromCRSURL",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 692,
            "description": "Initialize spatial reference from a URL.\n\nThis method will download the spatial reference from the given URL.",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromURL",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 720,
            "description": "Initialize from a Mapinfo style CoordSys definition.",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromMICoordSys",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 746,
            "description": "Initialize from an arbitrary spatial reference string.\n\nThis method will examine the provided input, and try to deduce the format,\nand then use it to initialize the spatial reference system.",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromUserInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 775,
            "description": "Initialize from EPSG GCS or PCS code.",
            "example": [
                "\n```\nvar ref = gdal.SpatialReference.fromEPSGA(4326);```"
            ],
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromEPSG",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 805,
            "description": "Initialize from EPSG GCS or PCS code.\n\nThis method is similar to `fromEPSG()` except that EPSG preferred axis ordering\n*will* be applied for geographic and projected coordinate systems. EPSG normally\ndefines geographic coordinate systems to use lat/long, and also there are also\na few projected coordinate systems that use northing/easting order contrary\nto typical GIS use).",
            "example": [
                "\n```\nvar ref = gdal.SpatialReference.fromEPSGA(26910);```"
            ],
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromEPSGA",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 841,
            "description": "Import coordinate system from ESRI .prj format(s).\n\nThis function will read the text loaded from an ESRI .prj file, and translate it into an OGRSpatialReference definition. This should support many (but by no means all) old style (Arc/Info 7.x) .prj files, as well as the newer pseudo-OGC WKT .prj files. Note that new style .prj files are in OGC WKT format, but require some manipulation to correct datum names, and units on some projection parameters. This is addressed within importFromESRI() by an automatical call to morphFromESRI().\n\nCurrently only GEOGRAPHIC, UTM, STATEPLANE, GREATBRITIAN_GRID, ALBERS, EQUIDISTANT_CONIC, TRANSVERSE (mercator), POLAR, MERCATOR and POLYCONIC projections are supported from old style files.",
            "static": 1,
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "fromESRI",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "",
                "type": "gdal.SpatialReference"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 879,
            "description": "Fetch linear geographic coordinate system units.",
            "itemtype": "method",
            "name": "getLinearUnits",
            "return": {
                "description": "An object containing `value` and `unit` properties.",
                "type": "Object"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 901,
            "description": "Fetch angular geographic coordinate system units.",
            "itemtype": "method",
            "name": "getAngularUnits",
            "return": {
                "description": "An object containing `value` and `unit` properties.",
                "type": "Object"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_spatial_reference.cpp",
            "line": 923,
            "description": "Validate SRS tokens.\n\nThis method attempts to verify that the spatial reference system is well formed, and consists of known tokens. The validation is not comprehensive.",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "`\"corrupt\"`, '\"unsupported\"', `null` (if fine)",
                "type": "String|null"
            },
            "class": "gdal.SpatialReference"
        },
        {
            "file": "src/gdal_warper.cpp",
            "line": 16,
            "description": "GDALReprojectImage() method with a ChunkAndWarpImage replaced with ChunkAndWarpMulti",
            "class": "gdal"
        },
        {
            "file": "src/gdal_warper.cpp",
            "line": 197,
            "description": "Reprojects a dataset.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "reprojectImage",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "",
                            "type": "gdal.Dataset"
                        },
                        {
                            "name": "dst",
                            "description": "",
                            "type": "gdal.Dataset"
                        },
                        {
                            "name": "s_srs",
                            "description": "",
                            "type": "gdal.SpatialReference"
                        },
                        {
                            "name": "t_srs",
                            "description": "",
                            "type": "gdal.SpatialReference"
                        },
                        {
                            "name": "resampling",
                            "description": "Resampling algorithm ({{#crossLink \"Constants (GRA)\"}}available options{{/crossLink}})",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "cutline",
                            "description": "Must be in src dataset pixel coordinates. Use CoordinateTransformation to convert between georeferenced coordinates and pixel coordinates",
                            "type": "gdal.Geometry",
                            "optional": true
                        },
                        {
                            "name": "srcBands",
                            "description": "",
                            "type": "Integer[]",
                            "optional": true
                        },
                        {
                            "name": "dstBands",
                            "description": "",
                            "type": "Integer[]",
                            "optional": true
                        },
                        {
                            "name": "srcAlphaBand",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "dstAlphaBand",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "srcNodata",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "dstNodata",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "memoryLimit",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "maxError",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "multi",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "options",
                            "description": "Warp options (see: [reference](http://www.gdal.org/structGDALWarpOptions.html#a0ed77f9917bb96c7a9aabd73d4d06e08))",
                            "type": "String[]|object",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "gdal"
        },
        {
            "file": "src/gdal_warper.cpp",
            "line": 283,
            "description": "Used to determine the bounds and resolution of the output virtual file which\nshould be large enough to include all the input image.",
            "throws": {
                "description": "Error"
            },
            "itemtype": "method",
            "name": "suggestedWarpOutput",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Warp options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "",
                            "type": "gdal.Dataset"
                        },
                        {
                            "name": "s_srs",
                            "description": "",
                            "type": "gdal.SpatialReference"
                        },
                        {
                            "name": "t_srs",
                            "description": "",
                            "type": "gdal.SpatialReference"
                        },
                        {
                            "name": "maxError",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "return": {
                "description": "An object containing `\"rasterSize\"` and `\"geoTransform\"` properties.",
                "type": "Object"
            },
            "class": "gdal"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 89,
            "itemtype": "attribute",
            "name": "lastError",
            "type": "Object",
            "class": "gdal"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 266,
            "description": "The collection of all drivers registered with GDAL",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.drivers",
            "type": "{gdal.GDALDrivers}",
            "class": "gdal"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 281,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DMD_LONGNAME",
            "type": "{String}",
            "class": "Constants (DMD)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 287,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DMD_MIMETYPE",
            "type": "{String}",
            "class": "Constants (DMD)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 293,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DMD_HELPTOPIC",
            "type": "{String}",
            "class": "Constants (DMD)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 299,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DMD_EXTENSION",
            "type": "{String}",
            "class": "Constants (DMD)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 305,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DMD_CREATIONOPTIONLIST",
            "type": "{String}",
            "class": "Constants (DMD)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 311,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DMD_CREATIONDATATYPES",
            "type": "{String}",
            "class": "Constants (DMD)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 322,
            "description": "Error level: (no error)",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CE_None",
            "type": "{Number}",
            "class": "Constants (CPL Error Levels)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 330,
            "description": "Error level: Debug",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CE_Debug",
            "type": "{Number}",
            "class": "Constants (CPL Error Levels)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 338,
            "description": "Error level: Warning",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CE_Warning",
            "type": "{Number}",
            "class": "Constants (CPL Error Levels)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 346,
            "description": "Error level: Failure",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CE_Failure",
            "type": "{Number}",
            "class": "Constants (CPL Error Levels)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 354,
            "description": "Error level: Fatal",
            "itemtype": "property",
            "name": "gdal.CE_Fatal",
            "type": "{Number}",
            "class": "Constants (CPL Error Levels)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 367,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_None",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 373,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_AppDefined",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 379,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_OutOfMemory",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 385,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_FileIO",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 391,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_OpenFailed",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 397,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_IllegalArg",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 403,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_NotSupported",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 409,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_AssertionFailed",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 415,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_NoWriteAccess",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 421,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_UserInterrupt",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 427,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.CPLE_ObjectNull",
            "type": "{Number}",
            "class": "Constants (CPL Error Codes)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 438,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DCAP_CREATE",
            "type": "{String}",
            "class": "Constants (DCAP)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 444,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DCAP_CREATECOPY",
            "type": "{String}",
            "class": "Constants (DCAP)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 450,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.DCAP_VIRTUALIO",
            "type": "{String}",
            "class": "Constants (DCAP)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 461,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCRandomRead",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 467,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCSequentialWrite",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 473,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCRandomWrite",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 479,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCFastSpatialFilter",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 485,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCFastFeatureCount",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 491,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCFastGetExtent",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 497,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCCreateField",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 503,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCDeleteField",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 509,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCReorderFields",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 515,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCAlterFieldDefn",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 521,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCTransactions",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 527,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCDeleteFeature",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 533,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCFastSetNextByIndex",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 539,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCStringsAsUTF8",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 545,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCIgnoreFields",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 553,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OLCCreateGeomField",
            "type": "{String}",
            "class": "Constants (OLC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 566,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.ODsCCreateLayer",
            "type": "{String}",
            "class": "Constants (ODsC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 572,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.ODsCDeleteLayer",
            "type": "{String}",
            "class": "Constants (ODsC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 578,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.ODsCCreateGeomFieldAfterCreateLayer",
            "type": "{String}",
            "class": "Constants (ODsC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 585,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.ODrCCreateDataSource",
            "type": "{String}",
            "class": "Constants (ODsC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 591,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.ODrCDeleteDataSource",
            "type": "{String}",
            "class": "Constants (ODsC)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 609,
            "description": "Unknown or unspecified type",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_Unknown",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 616,
            "description": "Eight bit unsigned integer",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_Byte",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 623,
            "description": "Sixteen bit unsigned integer",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_UInt16",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 630,
            "description": "Sixteen bit signed integer",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_Int16",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 637,
            "description": "Thirty two bit unsigned integer",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_UInt32",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 644,
            "description": "Thirty two bit signed integer",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_Int32",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 651,
            "description": "Thirty two bit floating point",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_Float32",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 658,
            "description": "Sixty four bit floating point",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_Float64",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 665,
            "description": "Complex Int16",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_CInt16",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 672,
            "description": "Complex Int32",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_CInt32",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 679,
            "description": "Complex Float32",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_CFloat32",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 686,
            "description": "Complex Float64",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GDT_CFloat64",
            "type": "{String}",
            "class": "Constants (GDT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 698,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OJUndefined",
            "type": "{String}",
            "class": "Constants (OJ)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 704,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OJLeft",
            "type": "{String}",
            "class": "Constants (OJ)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 710,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OJRight",
            "type": "{String}",
            "class": "Constants (OJ)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 721,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_Undefined",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 727,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_GrayIndex",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 733,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_PaletteIndex",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 739,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_RedBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 745,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_GreenBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 751,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_BlueBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 757,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_AlphaBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 763,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_HueBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 769,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_SaturationBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 775,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_LightnessBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 781,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_CyanBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 787,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_MagentaBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 793,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_YellowBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 799,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_BlackBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 805,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_YCbCr_YBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 811,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_YCbCr_CbBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 817,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GCI_YCbCr_CrBand",
            "type": "{String}",
            "class": "Constants (GCI)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 828,
            "description": "Old-style 99-402 extended dimension (Z) WKB types.\nSynonymous with 'wkbVariantOldOgc' (gdal >= 2.0)",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbVariantOgc",
            "type": "{String}",
            "class": "Constants (wkbVariant)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 838,
            "description": "Old-style 99-402 extended dimension (Z) WKB types.\nSynonymous with 'wkbVariantOgc' (gdal < 2.0)",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbVariantOldOgc",
            "type": "{String}",
            "class": "Constants (wkbVariant)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 848,
            "description": "SFSQL 1.2 and ISO SQL/MM Part 3 extended dimension (Z&M) WKB types.",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbVariantIso",
            "type": "{String}",
            "class": "Constants (wkbVariant)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 861,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbXDR",
            "type": "{String}",
            "class": "Constants (wkbByteOrder)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 867,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbNDR",
            "type": "{String}",
            "class": "Constants (wkbByteOrder)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 878,
            "final": "The `wkb25DBit` constant can be used to convert between 2D types to 2.5D types",
            "example": [
                "\n```\n// 2 -> 2.5D\nwkbPoint25D = gdal.wkbPoint | gdal.wkb25DBit\n\n// 2.5D -> 2D (same as wkbFlatten())\nwkbPoint = gdal.wkbPoint25D & (~gdal.wkb25DBit)```"
            ],
            "itemtype": "property",
            "name": "gdal.wkb25DBit",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 898,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbUnknown",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 904,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbPoint",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 910,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbLineString",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 916,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbPolygon",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 922,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbMultiPoint",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 928,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbMultiLineString",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 934,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbMultiPolygon",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 940,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbGeometryCollection",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 946,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbNone",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 952,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbLinearRing",
            "type": "{String}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 958,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbPoint25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 964,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbLineString25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 970,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbPolygon25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 976,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbMultiPoint25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 982,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbMultiLineString25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 988,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbMultiPolygon25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 994,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbGeometryCollection25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1000,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.wkbLinearRing25D",
            "type": "{integer}",
            "class": "Constants (wkbGeometryType)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1011,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTInteger",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1017,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTIntegerList",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1023,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTReal",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1029,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTRealList",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1035,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTString",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1041,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTStringList",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1047,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTWideString",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1053,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTWideStringList",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1059,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTBinary",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1065,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTDate",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1071,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTTime",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1077,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.OFTDateTime",
            "type": "{String}",
            "class": "Constants (OFT)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1090,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GRA_NearestNeighbor",
            "type": "{String}",
            "class": "Constants (GRA)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1096,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GRA_Bilinear",
            "type": "{String}",
            "class": "Constants (GRA)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1102,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GRA_Cubic",
            "type": "{String}",
            "class": "Constants (GRA)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1108,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GRA_CubicSpline",
            "type": "{String}",
            "class": "Constants (GRA)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1114,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GRA_Lanczos",
            "type": "{String}",
            "class": "Constants (GRA)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1120,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GRA_Average",
            "type": "{String}",
            "class": "Constants (GRA)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1126,
            "final": 1,
            "itemtype": "property",
            "name": "gdal.GRA_Mode",
            "type": "{String}",
            "class": "Constants (GRA)"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1133,
            "description": "GDAL version (not the binding version)",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.version",
            "type": "{String}",
            "class": "gdal"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1143,
            "description": "Details about the last error that occurred. The property\nwill be null or an object containing three properties: \"number\",\n\"message\", and \"type\".",
            "final": 1,
            "itemtype": "property",
            "name": "gdal.lastError",
            "type": "{Object}",
            "class": "gdal"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1160,
            "description": "Disables all output.",
            "static": 1,
            "itemtype": "method",
            "name": "quiet",
            "class": "gdal"
        },
        {
            "file": "src/node_gdal.cpp",
            "line": 1169,
            "description": "Displays extra debugging information from GDAL.",
            "static": 1,
            "itemtype": "method",
            "name": "verbose",
            "class": "gdal"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type",
            "line": " src/utils/translate_options.hpp:26"
        },
        {
            "message": "Missing item type",
            "line": " src/utils/translate_options.hpp:28"
        },
        {
            "message": "Missing item type",
            "line": " src/utils/translate_options.hpp:30"
        },
        {
            "message": "Missing item type",
            "line": " src/utils/translate_options.hpp:51"
        },
        {
            "message": "Missing item type",
            "line": " src/utils/translate_options.hpp:53"
        },
        {
            "message": "Missing item type\nand freed with GDALTranslateOptionsNew() and GDALTranslateOptionsFree() respectively.",
            "line": " src/utils/translate_options.hpp:55"
        },
        {
            "message": "Missing item type\nGDALReprojectImage() method with a ChunkAndWarpImage replaced with ChunkAndWarpMulti",
            "line": " src/gdal_warper.cpp:16"
        }
    ]
}